{"version":3,"file":"connectbase-pattern-lib.mjs","sources":["../../../projects/pattern-lib/src/lib/pattern-lib.service.ts","../../../projects/pattern-lib/src/lib/pattern-lib.component.ts","../../../projects/pattern-lib/src/lib/datatable/datatable.component.ts","../../../projects/pattern-lib/src/lib/datatable/datatable.component.html","../../../projects/pattern-lib/src/lib/button/button.component.ts","../../../projects/pattern-lib/src/lib/button/button.component.html","../../../projects/pattern-lib/src/lib/avatar/avatar.component.ts","../../../projects/pattern-lib/src/lib/avatar/avatar.component.html","../../../projects/pattern-lib/src/lib/badge/badge.component.ts","../../../projects/pattern-lib/src/lib/badge/badge.component.html","../../../projects/pattern-lib/src/lib/directives/click-outside.directive.ts","../../../projects/pattern-lib/src/lib/dropdown/dropdown.component.ts","../../../projects/pattern-lib/src/lib/dropdown/dropdown.component.html","../../../projects/pattern-lib/src/lib/form/form.component.ts","../../../projects/pattern-lib/src/lib/form/form.component.html","../../../projects/pattern-lib/src/lib/search-input/search-input.component.ts","../../../projects/pattern-lib/src/lib/search-input/search-input.component.html","../../../projects/pattern-lib/src/lib/sidebar/sidebar.component.ts","../../../projects/pattern-lib/src/lib/sidebar/sidebar.component.html","../../../projects/pattern-lib/src/lib/status-indicator/status-indicator.component.ts","../../../projects/pattern-lib/src/lib/status-indicator/status-indicator.component.html","../../../projects/pattern-lib/src/lib/strip/strip.component.ts","../../../projects/pattern-lib/src/lib/strip/strip.component.html","../../../projects/pattern-lib/src/lib/table/table.component.ts","../../../projects/pattern-lib/src/lib/table/table.component.html","../../../projects/pattern-lib/src/lib/dropdown-expanded/dropdown-expanded.component.ts","../../../projects/pattern-lib/src/lib/dropdown-expanded/dropdown-expanded.component.html","../../../projects/pattern-lib/src/lib/deals-card/deals-card.component.ts","../../../projects/pattern-lib/src/lib/deals-card/deals-card.component.html","../../../projects/pattern-lib/src/lib/progress-bar/progress-bar.component.ts","../../../projects/pattern-lib/src/lib/progress-bar/progress-bar.component.html","../../../projects/pattern-lib/src/lib/dropdown-status/dropdown-status.component.ts","../../../projects/pattern-lib/src/lib/dropdown-status/dropdown-status.component.html","../../../projects/pattern-lib/src/lib/pattern-lib.module.ts","../../../projects/pattern-lib/src/public-api.ts","../../../projects/pattern-lib/src/connectbase-pattern-lib.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PatternLibService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cb-pattern-lib',\n  template: `\n    <p>\n      pattern-lib works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class PatternLibComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cb-datatable',\n  templateUrl: './datatable.component.html',\n  styleUrls: ['./datatable.component.scss']\n})\nexport class DatatableComponent implements OnInit {\n  cloneRows: any;\n  searchKey: string = '';\n  @Input('headerBgColor') headerBgColor: string = '';\n  @Input('searchable') searchable: boolean = false;\n  @Input('columns') columns: any[];\n  @Input('rows') rows: any[];\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.cloneRows = this.rows;\n  }\n\n  onSearch() {\n    var searchKey = this.searchKey.toLocaleLowerCase('en-US');\n    this.cloneRows = this.rows.filter((val: any) => {\n      let rVal = false;\n      this.columns.forEach(element => {\n        let value = val[element].toString();\n        value = value.toLocaleLowerCase('en-US');\n        if (value.includes(searchKey)) {\n            rVal = true;\n        }\n      });\n      return rVal;\n    })\n  }\n}\n","<div *ngIf=\"searchable\" class=\"search\">\n  <label>Search</label>\n  <input\n    type=\"text\"\n    id=\"searchKey\"\n    name=\"searchKey\"\n    [(ngModel)]=\"searchKey\"\n    (keyup)=\"onSearch()\"\n    placeholder=\"type here to search...\"\n  />\n</div>\n<table>\n  <thead [style.background-color]=\"headerBgColor\">\n    <tr>\n      <th nowrap *ngFor=\"let column of columns\">\n        {{ column }}<i class=\"fa fa-chevron-up\"></i>\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr *ngFor=\"let data of cloneRows\">\n      <td nowrap *ngFor=\"let column of columns\">{{ data[column] }}</td>\n    </tr>\n  </tbody>\n  <tfoot class=\"footer\" *ngIf=\"cloneRows.length == 0\">\n    <tr>\n      No records found!\n    </tr>\n  </tfoot>\n</table>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cb-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss']\n})\nexport class ButtonComponent {\n\n  constructor() { }\n\n  @Input('icon') icon: boolean = false;\n  @Input('btnLink') btnLink: string = '';\n  @Input('img') img: string = '';\n  @Input('className') className: string = '';\n  @Input('size') size: 'small' | 'medium' | 'large' | '' = '';\n  @Input('label') label: string = '';\n  @Input('disabled') disabled: boolean = false;\n\n}\n","<button\n  *ngIf=\"btnLink != ''\"\n  class=\"{{ className }} {{ size }}\"\n  [attr.disabled]=\"disabled ? 'disabled' : null\"\n  [routerLink]=\"btnLink\"\n>\n  <ng-container *ngIf=\"!icon\">{{ label }}</ng-container>\n  <ng-container *ngIf=\"icon\"><img src=\"{{ img }}\" alt=\"button\" /></ng-container>\n</button>\n\n<button\n  *ngIf=\"btnLink == ''\"\n  class=\"{{ className }} {{ size }}\"\n  [attr.disabled]=\"disabled ? 'disabled' : null\"\n>\n  <ng-container *ngIf=\"!icon\">{{ label }}</ng-container>\n  <ng-container *ngIf=\"icon\"><img src=\"{{ img }}\" alt=\"button\" /></ng-container>\n</button>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cb-avatar',\n  templateUrl: './avatar.component.html',\n  styleUrls: ['./avatar.component.scss'],\n})\nexport class AvatarComponent {\n  @Input() type: string = 'gold';\n  @Input('label') label: string = 'JP';\n\n  constructor() {}\n}\n","<div class=\"avatar {{type}}\"><span>{{label}}</span></div>","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cb-badge',\n  templateUrl: './badge.component.html',\n  styleUrls: ['./badge.component.scss'],\n})\nexport class BadgeComponent {\n  constructor() {}\n\n  @Input() type: string = 'pending';\n  @Input('label') label: string = 'Pending';\n}\n","<label class=\"badge {{type}}\">{{label}}</label>","import { Directive, ElementRef, EventEmitter, HostListener, Output } from \"@angular/core\";\n\n@Directive({\n    selector: '[clickOutside]'\n})\nexport class ClickOutsideDirective {\n\n    constructor(private elementRef: ElementRef) { }\n\n    @Output() clickOutside = new EventEmitter<MouseEvent>();\n\n    @HostListener('document:click', ['$event', '$event.target'])\n    public onClick(event: MouseEvent, targetElement: HTMLElement): void {\n        if (!targetElement) {\n            return;\n        }\n        const clickedInside = this.elementRef.nativeElement.contains(targetElement);\n        if (!clickedInside) {\n            this.clickOutside.emit(event);\n        }\n    }\n}","import { Component, Input, Output, EventEmitter, ElementRef } from '@angular/core';\nimport { KeyValue } from '../../models/key-value';\n\n@Component({\n  selector: 'cb-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss'],\n  host: {\n      '(document:keydown)': 'handleKeyboardEvents($event)'\n  }\n})\nexport class DropdownComponent {\n\n  @Input('type') type: string = 'normal';\n  @Input('disabled') disabled: boolean = false;\n  @Input('placeholder') placeholder: string = '';\n  @Input('custom') custom: boolean = false;\n  @Input('items') items: KeyValue[];\n  @Output() currentValueChange = new EventEmitter();\n\n  public currentValue: KeyValue;\n  public dropdownOpen: boolean = false;\n  public get dropdownElement(): Element {return this.elem.nativeElement.querySelector('.dropdown-list')}\n\n  private currentIndex = -1;\n\n  constructor(private elem: ElementRef) { }\n\n  ngOnInit(): void {\n    this.currentValue = {key: this.placeholder, value: ''};\n  }\n\n  handleKeyboardEvents($event: KeyboardEvent) {\n    if (this.dropdownOpen) {\n      $event.preventDefault();\n    } else {\n      return;\n    }\n    if ($event.code === 'ArrowUp') {\n      if (this.currentIndex < 0) {\n        this.currentIndex = 0;\n      } else if (this.currentIndex > 0) {\n        this.currentIndex--;\n      }\n      this.elem.nativeElement.querySelectorAll('li').item(this.currentIndex).focus();\n    } else if ($event.code === 'ArrowDown') {\n      if (this.currentIndex < 0) {\n        this.currentIndex = 0;\n      } else if (this.currentIndex < this.items.length-1) {\n        this.currentIndex++;\n      }\n      this.elem.nativeElement.querySelectorAll('li').item(this.currentIndex).focus();\n    } else if (($event.code === 'Enter' || $event.code === 'NumpadEnter') && this.currentIndex >= 0) {\n      this.selectByIndex(this.currentIndex);\n    } else if ($event.code === 'Escape') {\n      this.closeDropdown();\n    }\n  }\n\n  closeDropdown() {\n    this.dropdownElement.setAttribute('aria-expanded', \"false\");\n    this.currentIndex = -1;\n    this.dropdownOpen = false;\n  }\n\n  selectByIndex(i: number) {\n    let value = this.items[i];\n    this.select(value);\n  }\n\n  select(value: any) {\n    this.currentValue = value;\n    this.closeDropdown();\n    this.currentValueChange.emit(this.currentValue);\n  }\n\n  out() {\n    debugger\n  }\n\n  toggleDropdown() {\n    this.dropdownOpen = !this.dropdownOpen;\n    this.dropdownElement.setAttribute('aria-expanded', this.dropdownOpen ? \"true\" : \"false\");\n  }\n}\n","<div class=\"select {{ type }}\" *ngIf=\"!custom\">\n  <select [attr.disabled]=\"disabled ? 'disabled' : null\">\n    <option *ngIf=\"placeholder !== ''\" value=\"\">{{ placeholder }}</option>\n    <option [value]=\"item.value\" *ngFor=\"let item of items\">\n      {{ item.key }}\n    </option>\n  </select>\n</div>\n\n<div class=\"customdropdown {{ type }}\" *ngIf=\"custom\">\n  <button\n    class=\"dropdown\"\n    aria-haspopup=\"listbox\"\n    aria-labelledby=\"dropdown-label\"\n    (click)=\"toggleDropdown()\"\n    (clickOutside)=\"dropdownOpen = false\"\n  >\n    {{ currentValue.key }}\n  </button>\n  <ul\n    class=\"dropdown-list\"\n    role=\"listbox\"\n    aria-expanded=\"false\"\n    [ngClass]=\"{ 'dropdown-open': dropdownOpen }\"\n  >\n    <li\n      *ngFor=\"let o of items\"\n      [ngClass]=\"{ selected: currentValue === o }\"\n      tabindex=\"0\"\n      (click)=\"select(o)\"\n      role=\"option\"\n      [innerHTML]=\"o.key\"\n    ></li>\n  </ul>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { Form } from '../../models/form';\n\n@Component({\n  selector: 'cb-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss']\n})\nexport class FormComponent {\n\n  constructor() { }\n  @Input('type') type: string = '';\n  @Input('items') items: Form[];\n  \n\n}\n","<div *ngFor=\"let item of items\">\n    <label class=\"{{type}}-box\">{{item.label}}\n        <input type=\"{{type}}\" [attr.checked]=\"type == 'checkbox'\" [attr.name]=\"type == 'radio'\">\n        <span class=\"checkmark\"></span>\n    </label>\n</div>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cb-search-input',\n  templateUrl: './search-input.component.html',\n  styleUrls: ['./search-input.component.scss']\n})\nexport class SearchInputComponent {\n\n  constructor() { }\n\n  @Input('size') size: string = 'large';\n  @Input('shape') shape: string = '';\n  @Input('placeholder') placeholder: string = 'Type here...';\n}\n","<input type=\"text\" class=\"formInputText {{size}} {{shape}}\" placeholder=\"{{placeholder}}\"/>","import { Component, Input } from '@angular/core';\nimport { Sidebar } from '../../models/sidebar';\n\n@Component({\n  selector: 'cb-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent {\n\n  constructor() { }\n\n  @Input('items') items: Sidebar[];\n  @Input('settingsLink') settingsLink: string;\n\n}\n","<nav class=\"sidebar\">\n  <div class=\"top\">\n    <a href=\"#\" class=\"logo\">\n      <img src=\"./assets/icons/nav-bar/logo.svg\" alt=\"Logo\" />\n    </a>\n    <ul>\n      <li\n        *ngFor=\"let item of items\"\n        [routerLink]=\"item.routerLink\"\n        [routerLinkActive]=\"'active'\"\n      >\n        <a>\n          <img src=\"{{ item.img }}\" alt=\"Logo\" />\n          <span>{{ item.label }}</span>\n        </a>\n      </li>\n    </ul>\n  </div>\n  <div class=\"bottom\">\n    <ul>\n      <li [routerLink]=\"settingsLink\" [routerLinkActive]=\"'active'\">\n        <a>\n          <img src=\"./assets/icons/nav-bar/settings.svg\" alt=\"Logo\" />\n        </a>\n      </li>\n    </ul>\n  </div>\n</nav>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cb-status-indicator',\n  templateUrl: './status-indicator.component.html',\n  styleUrls: ['./status-indicator.component.scss'],\n})\nexport class StatusIndicatorComponent {\n  constructor() {}\n\n  @Input('type') type: string = 'pending';\n}\n","<span class=\"status {{type}}\"></span>","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cb-strip',\n  templateUrl: './strip.component.html',\n  styleUrls: ['./strip.component.scss']\n})\nexport class StripComponent {\n  @Input('className') className: string = '';\n  constructor() { }\n}\n","<div class=\"strip {{ className }}\"></div>\n","import { Component, EventEmitter, Input, Output, OnInit, ElementRef } from '@angular/core';\nimport { Sort } from '../../models/sort';\nimport { TableAction } from '../../models/table-action';\nimport { TableColumn } from '../../models/table-column';\n\n@Component({\n  selector: 'cb-table',\n  templateUrl: './table.component.html',\n  styleUrls: ['./table.component.scss'],\n})\nexport class TableComponent implements OnInit {\n  @Input('sort') sort: Sort; \n  selectedRow: any;\n  @Input('isLoading') isLoading: boolean = true;\n  @Input('customSortable') customSortable: boolean = false;\n  @Input('sortable') sortable: boolean = true;\n  @Input('columns') columns: TableColumn[];\n  @Input('rows') rows: any[];\n  @Input('actionDropdownItems') actionDropdownItems: any[];\n  @Input('tableClass') tableClass: string = '';\n  @Input('tableId') tableId: string = 'cb-table';\n  @Input('actions') actions: TableAction[];\n  @Output('customSort') customSort = new EventEmitter();\n  @Output('rowClick') rowClick = new EventEmitter();\n  public dropdownOpen: boolean = false;\n  @Output() currentValueChange = new EventEmitter();\n  @Output('actionClick') actionClick = new EventEmitter();\n  public clickedRow: number\n  public get dropdownElement(): Element { return this.elem.nativeElement.querySelector('.dropdown-list') }\n\n  constructor(private elem: ElementRef) { }\n\n  ngOnInit(): void {\n    // if (this.columns != undefined && this.sortable) {\n    //   let first_sortable_column = this.columns.filter((column: TableColumn) => {\n    //     return column.sortable;\n    //   });\n    //   this.sort = {\n    //     column: first_sortable_column[0].key,\n    //     direction: 1,\n    //   };\n    // }\n  }\n\n  onRowItemClick1(data: any) {\n    this.selectedRow = data;\n    this.rowClick.emit(data);\n  }\n\n  actionClicked(data: any) {\n    this.actionClick.emit(data);\n  }\n\n  closeDropdown() {\n    this.dropdownElement.setAttribute('aria-expanded', \"false\");\n    this.dropdownOpen = false;\n  }\n\n  select(value: any) {\n    this.closeDropdown();\n    this.currentValueChange.emit(value);\n  }\n\n\n\n  toggleDropdown(id: any) {\n    this.clickedRow = id;\n    this.dropdownOpen = !this.dropdownOpen;\n    this.dropdownElement.setAttribute('aria-expanded', this.dropdownOpen ? \"true\" : \"false\");\n  }\n\n  onSortColumn(column: TableColumn): void {\n    if (this.sortable && column.sortable && !this.customSortable) {\n      if (this.sort.direction == 1) {\n        this.sort.direction = -1;\n      } else {\n        this.sort.direction = 1;\n      }\n      if (this.rows != undefined) {\n        this.rows.sort((a: any, b: any) => {\n          a = a[column.key].value.toString().toLowerCase();\n          b = b[column.key].value.toString().toLowerCase();\n          return a.localeCompare(b) * this.sort.direction;\n        });\n      }\n      this.sort.column = column.key;\n    } else if (this.customSortable) {\n      if (this.sort.direction == 1) {\n        this.sort.direction = -1;\n      } else {\n        this.sort.direction = 1;\n      }\n      this.sort.column = column.key;\n      this.customSort.emit(this.sort);\n    }\n  }\n}\n","<table class=\"table {{ tableClass }}\" id=\"{{ tableId }}\">\n  <thead>\n    <tr>\n      <th colspan=\"14\" class=\"colspaned\">\n        <table class=\"nested-table\">\n          <colgroup>\n            <col\n              class=\"{{ column.className }}\"\n              *ngFor=\"let column of columns\"\n            />\n          </colgroup>\n          <tr>\n            <th\n              *ngFor=\"let column of columns\"\n              (click)=\"onSortColumn(column)\"\n              class=\"{{ column.className }}\"\n              [ngClass]=\"{\n                sort: column.sortable && sortable\n              }\"\n            >\n              <ng-container *ngIf=\"column.type != 'action'\">\n                {{ column.label }}\n                <img\n                  *ngIf=\"\n                    sort.column == column.key &&\n                    sort.direction == 1 &&\n                    column.sortable &&\n                    sortable\n                  \"\n                  src=\"./assets/icons/arrowdown.svg\"\n                  alt=\"asc\"\n                />\n                <img\n                  *ngIf=\"\n                    sort.column == column.key &&\n                    sort.direction == -1 &&\n                    column.sortable &&\n                    sortable\n                  \"\n                  src=\"./assets/icons/arrowup.svg\"\n                  alt=\"desc\"\n                />\n              </ng-container>\n              <ng-container *ngIf=\"column.type == 'action'\">\n                <button\n                  class=\"settings-btn\"\n                  *ngIf=\"column.label === '' && column.showGear\"\n                >\n                  <img src=\"./assets/icons/nav-bar/settings.svg\" />\n                </button>\n                <ng-container *ngIf=\"column.label !== ''\">{{\n                  column.label\n                }}</ng-container>\n              </ng-container>\n            </th>\n          </tr>\n        </table>\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr class=\"no-data-row\" *ngIf=\"rows.length === 0 && !isLoading\">\n      <td colspan=\"13\">\n        <span class=\"text\">No records available!</span>\n      </td>\n    </tr>\n    <ng-container *ngIf=\"rows.length > 0\">\n      <tr\n        class=\"expandable\"\n        *ngFor=\"let data of rows; let id = index\"\n        (click)=\"onRowItemClick1(data)\"\n      >\n        <td colspan=\"14\" class=\"colspaned\">\n          <table class=\"nested-table\">\n            <colgroup>\n              <col\n                class=\"{{ column.className }}\"\n                *ngFor=\"let column of columns\"\n              />\n            </colgroup>\n            <tr>\n              <td\n                [attr.data-label]=\"column.label\"\n                *ngFor=\"let column of columns\"\n                class=\"{{ column.className }}\"\n                [ngClass]=\"{\n                  'icon-td':\n                    column.type === 'img-text' || column.type === 'avatar',\n                  actions: column.type === 'action'\n                }\"\n              >\n                <ng-container *ngIf=\"column.type == 'linked'\">\n                  <a\n                    *ngIf=\"data[column.key].img\"\n                    (click)=\"actionClicked({data, action: 'linked-click'});$event.stopPropagation()\"\n                    class=\"link-icon\"\n                    ><img src=\"{{ data[column.key].img }}\" alt=\"Link\"\n                  /></a>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'normal'\">\n                  {{ data[column.key].value }}\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'badge-with-date'\">\n                  {{ data[column.key].value }}\n                  <div>\n                    <small class=\"text-small grey-text\">{{\n                      data[column.key].badgeLabel\n                    }}</small>\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'currency'\">\n                  {{ data[column.key].value | currency: column.currencyType }}\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'status'\">\n                  <span class=\"status {{ data[column.key].value }}\"></span>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'img-progress'\">\n                  <div>\n                    <img\n                      *ngIf=\"data[column.key].img\"\n                      [src]=\"data[column.key].img\"\n                      alt=\"Flag\"\n                    />\n                    {{ data[column.key].label }}\n                  </div>\n                  <div class=\"progress-bar-lined\">\n                    <div\n                      class=\"progress-indication {{ data[column.key].status }}\"\n                      [ngStyle]=\"{ width: data[column.key].value }\"\n                    ></div>\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'text-medium'\">\n                  <span class=\"text-medium\">{{ data[column.key].value }}</span>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'img-text'\">\n                  <div>\n                    <img\n                      src=\"{{ data[column.key].img }}\"\n                      alt=\"{{ column.label }}\"\n                    />\n                    {{ data[column.key].value }}\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'avatar'\">\n                  <div class=\"avatar {{ data[column.key].avatar }}\">\n                    <span>{{ data[column.key].value }}</span>\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'badge'\">\n                  <label class=\"badge {{ data[column.key].value }}\">{{\n                    data[column.key].label\n                  }}</label>\n                  <img\n                    (click)=\"actionClicked({data, action: 'badge-img-click'});$event.stopPropagation()\"\n                    *ngIf=\"data[column.key].img\"\n                    class=\"mt2\"\n                    src=\"{{ data[column.key].img }}\"\n                    alt=\"{{ column.label }}\"\n                  />\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'badge-label'\">\n                  <span class=\"badge mr2 {{ data[column.key].status }}\"\n                    >&nbsp;{{ data[column.key].badgeLabel }}</span\n                  >{{ data[column.key].value }}\n                </ng-container>\n                <div class=\"list-action\" *ngIf=\"column.type == 'action'\">\n                  <ng-container *ngFor=\"let action of actions; let i = index\">\n                    <button\n                      *ngIf=\"\n                        action.isButton && data[column.key][i] && action.img\n                      \"\n                      (click)=\"actionClicked({data, action: action.value});$event.stopPropagation()\"\n                      class=\"{{ action.className }}\"\n                    >\n                      <img [src]=\"action.img\" />\n                    </button>\n                    <div\n                      id=\"{{ id }}\"\n                      class=\"customdropdown\"\n                      *ngIf=\"action.isDropdown && data['actionDropdownItems']\"\n                    >\n                      <a\n                        aria-haspopup=\"listbox\"\n                        aria-labelledby=\"dropdown-label\"\n                        (click)=\"toggleDropdown(id); $event.stopPropagation()\"\n                        (clickOutside)=\"dropdownOpen = false\"\n                      >\n                        <img [src]=\"action.img\" />\n                      </a>\n                      <ul\n                        class=\"dropdown-list\"\n                        role=\"listbox\"\n                        aria-expanded=\"false\"\n                        [ngClass]=\"{\n                          'dropdown-open': dropdownOpen && id == clickedRow\n                        }\"\n                      >\n                        <li\n                          *ngFor=\"let o of data['actionDropdownItems']\"\n                          tabindex=\"0\"\n                          (click)=\"actionClicked({data, action: o.value});$event.stopPropagation()\"\n                          role=\"option\"\n                          [innerHTML]=\"o.key\"\n                        ></li>\n                      </ul>\n                    </div>\n                    <button\n                      *ngIf=\"\n                        !action.img && data[column.key][i] && action.isButton\n                      \"\n                      (click)=\"actionClicked({data, action: action.value});$event.stopPropagation()\"\n                      class=\"{{ action.className }}\"\n                    >\n                      {{ action.label }}\n                    </button>\n                  </ng-container>\n                </div>\n              </td>\n            </tr>\n            <tr class=\"expanded\" *ngFor=\"let order of data.linkedOrders\">\n              <td\n                [attr.data-label]=\"column.label\"\n                *ngFor=\"let column of columns\"\n                class=\"{{ column.className }}\"\n                [ngClass]=\"{\n                  'icon-td':\n                    column.type === 'img-text' || column.type === 'avatar',\n                  actions: column.type === 'action',\n                  linked: column.type === 'linked'\n                }\"\n              >\n                <ng-container *ngIf=\"column.type == 'linked'\">\n                  <span class=\"h-line\"></span>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'normal'\">\n                  {{ order[column.key].value }}\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'badge-with-date'\">\n                  {{ order[column.key].value }}\n                  <div>\n                    <small class=\"text-small grey-text\">{{\n                      order[column.key].badgeLabel\n                    }}</small>\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'currency'\">\n                  {{ order[column.key].value | currency: column.currencyType }}\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'status'\">\n                  <!-- <span class=\"status {{ order[column.key].value }}\"></span> -->\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'img-progress'\">\n                  <div>\n                    <img\n                      *ngIf=\"order[column.key].img\"\n                      [src]=\"order[column.key].img\"\n                      alt=\"Flag\"\n                    />\n                    {{ order[column.key].label }}\n                  </div>\n                  <div class=\"progress-bar-lined\">\n                    <div\n                      class=\"progress-indication {{ order[column.key].status }}\"\n                      [ngStyle]=\"{ width: order[column.key].value }\"\n                    ></div>\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'text-medium'\">\n                  <span class=\"text-medium\">{{ order[column.key].value }}</span>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'img-text'\">\n                  <div>\n                    <img\n                      src=\"{{ order[column.key].img }}\"\n                      alt=\"{{ column.label }}\"\n                    />\n                    {{ order[column.key].value }}\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'avatar'\">\n                  <div class=\"avatar {{ order[column.key].avatar }}\">\n                    <span>{{ order[column.key].value }}</span>\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'badge'\">\n                  <label class=\"badge {{ order[column.key].value }}\">{{\n                    order[column.key].label\n                  }}</label>\n                  <img\n                    (click)=\"actionClicked({order, action: 'badge-img-click'});$event.stopPropagation()\"\n                    *ngIf=\"order[column.key].img\"\n                    class=\"mt2\"\n                    src=\"{{ order[column.key].img }}\"\n                    alt=\"{{ column.label }}\"\n                  />\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'badge-label'\">\n                  <span class=\"badge mr2 {{ order[column.key].status }}\"\n                    >&nbsp;{{ order[column.key].badgeLabel }}</span\n                  >{{ order[column.key].value }}\n                </ng-container>\n                <div class=\"list-action\" *ngIf=\"column.type == 'action'\">\n                  <ng-container *ngFor=\"let action of actions; let i = index\">\n                    <button\n                      *ngIf=\"\n                        action.isButton && order[column.key][i] && action.img\n                      \"\n                      (click)=\"actionClicked({order, action: action.value+'-linked'});$event.stopPropagation()\"\n                      class=\"{{ action.className }}\"\n                    >\n                      <img [src]=\"action.img\" />\n                    </button>\n                    <div\n                      id=\"{{ id }}\"\n                      class=\"customdropdown\"\n                      *ngIf=\"action.isDropdown && order['actionDropdownItems']\"\n                    >\n                      <a\n                        aria-haspopup=\"listbox\"\n                        aria-labelledby=\"dropdown-label\"\n                        (click)=\"toggleDropdown(id); $event.stopPropagation()\"\n                        (clickOutside)=\"dropdownOpen = false\"\n                      >\n                        <img [src]=\"action.img\" />\n                      </a>\n                      <ul\n                        class=\"dropdown-list\"\n                        role=\"listbox\"\n                        aria-expanded=\"false\"\n                        [ngClass]=\"{\n                          'dropdown-open': dropdownOpen && id == clickedRow\n                        }\"\n                      >\n                        <li\n                          *ngFor=\"let o of order['actionDropdownItems']\"\n                          tabindex=\"0\"\n                          (click)=\"actionClicked({order, action: o.value+'-linked'});$event.stopPropagation()\"\n                          role=\"option\"\n                          [innerHTML]=\"o.key\"\n                        ></li>\n                      </ul>\n                    </div>\n                    <button\n                      *ngIf=\"\n                        !action.img && order[column.key][i] && action.isButton\n                      \"\n                      (click)=\"actionClicked({order, action: action.value+'-linked'});$event.stopPropagation()\"\n                      class=\"{{ action.className }}\"\n                    >\n                      {{ action.label }}\n                    </button>\n                  </ng-container>\n                </div>\n              </td>\n            </tr>\n          </table>\n        </td>\n      </tr>\n    </ng-container>\n  </tbody>\n</table>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'cb-dropdown-expanded',\n  templateUrl: './dropdown-expanded.component.html',\n  styleUrls: ['./dropdown-expanded.component.scss']\n})\nexport class DropdownExpandedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dropdown-expanded works!</p>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { DealsCard } from '../../models/deals-card';\n\n@Component({\n  selector: 'cb-deals-card',\n  templateUrl: './deals-card.component.html',\n  styleUrls: ['./deals-card.component.scss']\n})\nexport class DealsCardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  @Input('card') card: DealsCard;\n}\n","<div class=\"list-card\">\n  <div class=\"header\">\n    <div class=\"d-flex justify-content-between mb2\">\n      <div class=\"title\">{{ card.title }}</div>\n      <div class=\"link\">\n        <a class=\"detaillink\">Full Details</a>\n      </div>\n    </div>\n    <label class=\"badge {{ card.status }}\">{{ card.status | titlecase }}</label>\n  </div>\n  <div class=\"line\"><span class=\"{{ card.status }}\"></span></div>\n  <div class=\"content\" *ngIf=\"!card.multi_location\">\n    <div class=\"locations\">\n      <div class=\"title\">Location</div>\n      <div class=\"details\">{{ card.address }}</div>\n    </div>\n    <div class=\"type_speed\">\n      <span class=\"type\">{{ card.category }}</span>\n      <img src=\"./assets/icons/speed/1g.svg\" />\n      <span class=\"speed\">{{ card.speed }}</span>\n    </div>\n    <div class=\"amount\">\n      <span class=\"title\">{{ card.amount }}</span>\n      <span class=\"mr2\">MRC&nbsp;{{ card.mrc }}</span>\n      <span>NRC&nbsp;{{ card.nrc }}</span>\n    </div>\n    <hr />\n    <ul class=\"highlites\">\n      <li>\n        <div class=\"icon-box\">\n          <img src=\"./assets/icons/star.svg\" />\n        </div>\n        <div class=\"content-box\">\n          <span>High Competition</span>\n          <a>{{ card.providers_count }} Providers</a>\n        </div>\n      </li>\n      <li>\n        <div class=\"icon-box\">\n          <img src=\"./assets/icons/badge.svg\" />\n        </div>\n        <div class=\"content-box\">\n          <span>Potential Nearby</span>\n          <a>{{ card.nearby_companies }} Companies nearby</a>\n        </div>\n      </li>\n      <li>\n        <div class=\"icon-box\">\n          <img src=\"./assets/icons/customer.svg\" />\n        </div>\n        <div class=\"content-box\">\n          <span>Customer</span>\n          <a>{{ card.customer }}</a>\n        </div>\n      </li>\n    </ul>\n  </div>\n  <div class=\"content\" *ngIf=\"card.multi_location\">\n    <div class=\"locations\">\n      <div class=\"title\">{{ card.locations }} Locations</div>\n    </div>\n    <div class=\"amount\">\n      <span class=\"title\">{{ card.amount }}</span>\n    </div>\n    <div class=\"potential\">\n      <img src=\"./assets/icons/badge.svg\" />\n      <div class=\"detail\">\n        <label>Customer</label>\n        <a>{{ card.customer }}</a>\n      </div>\n    </div>\n    <ul class=\"highlites\">\n      <li>\n        <div class=\"content-box\">\n          <a>{{ card.providers_count }} Your Company can provide</a>\n        </div>\n      </li>\n    </ul>\n  </div>\n  <div class=\"actions\">\n    <button>\n      <svg\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 16 16\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M2.59037 13.4423L2.59044 13.4424C2.66665 13.5057 2.77314 13.5179 2.86182 13.4736L13.3618 8.22361C13.3618 8.22361 13.3618 8.22361 13.3618 8.22361C13.4465 8.18125 13.5 8.09468 13.5 8.00001C13.5 7.90532 13.4465 7.81879 13.3618 7.77642C13.3618 7.77642 13.3618 7.77642 13.3618 7.77642L2.86182 2.52643L2.86177 2.52641C2.7731 2.48206 2.66666 2.49433 2.59047 2.55759L2.59033 2.5577C2.51408 2.62096 2.48242 2.72334 2.50965 2.81861L2.50967 2.81869L3.58103 6.56863C3.61172 6.676 3.70986 6.75001 3.82148 6.75001L7.25002 6.75001C7.94039 6.75001 8.50002 7.30964 8.50002 8.00001C8.50002 8.69035 7.94039 9.25001 7.25002 9.25001H3.82148C3.70984 9.25001 3.61171 9.32401 3.58103 9.43137L2.50967 13.1813L2.50965 13.1814C2.48242 13.2766 2.51406 13.379 2.59037 13.4423Z\"\n          fill=\"#005EB8\"\n          stroke=\"#005EB8\"\n        />\n      </svg>\n    </button>\n    <button>\n      <svg\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 16 16\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          d=\"M4.56667 7.80004C4.56667 7.22932 4.10404 6.7667 3.53334 6.7667C2.96263 6.7667 2.5 7.22932 2.5 7.80004C2.5 8.37073 2.96264 8.83337 3.53334 8.83337C4.10403 8.83337 4.56667 8.37073 4.56667 7.80004ZM9.16668 7.80004C9.16668 7.22932 8.70406 6.7667 8.13334 6.7667C7.56264 6.7667 7.10001 7.22932 7.10001 7.80004C7.10001 8.37073 7.56265 8.83337 8.13334 8.83337C8.70405 8.83337 9.16668 8.37074 9.16668 7.80004ZM13.7667 7.80004C13.7667 7.22932 13.3041 6.7667 12.7333 6.7667C12.1626 6.7667 11.7 7.22932 11.7 7.80004C11.7 8.37074 12.1626 8.83337 12.7333 8.83337C13.3041 8.83337 13.7667 8.37074 13.7667 7.80004Z\"\n          fill=\"#66757E\"\n          stroke=\"#66757E\"\n        />\n      </svg>\n    </button>\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'cb-progress-bar',\n  templateUrl: './progress-bar.component.html',\n  styleUrls: ['./progress-bar.component.scss'],\n})\nexport class ProgressBarComponent {\n  @Input('date') date: string = '';\n  @Input('percentage') percentage: string = '';\n  @Input('statuses') statuses: any = [];\n}\n","<div class=\"progress-indicator mt8\">\n  <div class=\"item\">\n    <div class=\"percentage d-flex justify-content-start\">0%</div>\n    <div class=\"bar {{ statuses[0] ? statuses[0] : '' }}\"></div>\n    <div class=\"status-text\">\n      <span class=\"status\">Sent</span><span class=\"date\">{{ date }}</span>\n    </div>\n  </div>\n  <div class=\"item\">\n    <div class=\"percentage\"></div>\n    <div class=\"bar {{ statuses[1] ? statuses[1] : '' }}\"></div>\n    <div class=\"status-text\">\n      <span class=\"status\">Acknowledged</span\n      ><span class=\"date\">{{ date }}</span>\n    </div>\n  </div>\n  <div class=\"item\">\n    <div class=\"percentage d-flex justify-content-center flagtext\">\n      <img src=\"./assets/icons/flag2.svg\" alt=\"Flag\" width=\"20\" /><span>{{\n        date\n      }}</span>\n    </div>\n    <div class=\"bar {{ statuses[2] ? statuses[2] : '' }}\"></div>\n    <div class=\"status-text\">\n      <span class=\"status\">In Progress</span\n      ><span class=\"date\">{{ date }}</span>\n    </div>\n  </div>\n  <div class=\"item\">\n    <div class=\"percentage\"></div>\n    <div class=\"bar {{ statuses[3] ? statuses[3] : '' }}\"></div>\n    <div class=\"status-text\">\n      <span class=\"status\">Confirmed</span><span class=\"date\">{{ date }}</span>\n    </div>\n  </div>\n  <div class=\"item\">\n    <div class=\"percentage\"></div>\n    <div class=\"bar {{ statuses[4] ? statuses[4] : '' }}\"></div>\n    <div class=\"status-text\">\n      <span class=\"status\">Delivered</span><span class=\"date\">{{ date }}</span>\n    </div>\n  </div>\n  <div class=\"item\">\n    <div class=\"percentage d-flex justify-content-end flaglate\">\n      <label class=\"checkbox-box mr3\"\n        >Flag as Late\n        <input type=\"checkbox\" />\n        <span class=\"checkmark\"></span> </label\n      >100%\n    </div>\n    <div class=\"bar {{ statuses[5] ? statuses[5] : '' }}\"></div>\n    <div class=\"status-text text-right\">\n      <span class=\"status\">Completed</span><span class=\"date\">{{ date }}</span>\n    </div>\n  </div>\n  <div\n    *ngIf=\"percentage != ''\"\n    class=\"circular-indicator\"\n    [style.left]=\"percentage\"\n  >\n    <span class=\"perc-value\">{{ percentage }}</span>\n    <span class=\"circle\"></span>\n  </div>\n</div>\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { KeyValue } from '../../models/key-value';\n\n@Component({\n  selector: 'cb-dropdown-status',\n  templateUrl: './dropdown-status.component.html',\n  styleUrls: ['./dropdown-status.component.scss'],\n  host: {\n    '(document:keydown)': 'handleKeyboardEvents($event)',\n  },\n})\nexport class DropdownStatusComponent {\n  @Input('status') status: string = '';\n  @Input('statusClass') statusClass: string = '';\n  @Input('items') items: any = [];\n\n  @Output() currentValueChange = new EventEmitter();\n\n  public currentValue: KeyValue;\n  public dropdownOpen: boolean = false;\n  public get dropdownElement(): Element {\n    return this.elem.nativeElement.querySelector('.dropdown-list');\n  }\n\n  private currentIndex = -1;\n\n  constructor(private elem: ElementRef) {}\n\n  ngOnInit(): void {}\n\n  handleKeyboardEvents($event: KeyboardEvent) {\n    if (this.dropdownOpen) {\n      $event.preventDefault();\n    } else {\n      return;\n    }\n    if ($event.code === 'ArrowUp') {\n      if (this.currentIndex < 0) {\n        this.currentIndex = 0;\n      } else if (this.currentIndex > 0) {\n        this.currentIndex--;\n      }\n      this.elem.nativeElement\n        .querySelectorAll('li')\n        .item(this.currentIndex)\n        .focus();\n    } else if ($event.code === 'ArrowDown') {\n      if (this.currentIndex < 0) {\n        this.currentIndex = 0;\n      } else if (this.currentIndex < this.items.length - 1) {\n        this.currentIndex++;\n      }\n      this.elem.nativeElement\n        .querySelectorAll('li')\n        .item(this.currentIndex)\n        .focus();\n    } else if (\n      ($event.code === 'Enter' || $event.code === 'NumpadEnter') &&\n      this.currentIndex >= 0\n    ) {\n      this.selectByIndex(this.currentIndex);\n    } else if ($event.code === 'Escape') {\n      this.closeDropdown();\n    }\n  }\n\n  closeDropdown() {\n    this.dropdownElement.setAttribute('aria-expanded', 'false');\n    this.currentIndex = -1;\n    this.dropdownOpen = false;\n  }\n\n  selectByIndex(i: number) {\n    let value = this.items[i];\n    this.select(value);\n  }\n\n  select(value: any) {\n    this.currentValue = value;\n    this.closeDropdown();\n    this.currentValueChange.emit(this.currentValue);\n  }\n\n  out() {}\n\n  toggleDropdown() {\n    this.dropdownOpen = !this.dropdownOpen;\n    this.dropdownElement.setAttribute(\n      'aria-expanded',\n      this.dropdownOpen ? 'true' : 'false'\n    );\n  }\n}\n","<div class=\"customdropdown status-dropdown {{ statusClass }}\">\n  <div class=\"dropdown\" aria-haspopup=\"listbox\" aria-labelledby=\"dropdown-label\" (click)=\"toggleDropdown()\"\n    (clickOutside)=\"dropdownOpen = false\">\n    {{ status }}\n  </div>\n  <ul class=\"dropdown-list\" aria-expanded=\"false\" [ngClass]=\"{ 'dropdown-open': dropdownOpen }\">\n    <li *ngFor=\"let item of items\" (click)=\"select(item)\">{{ item }}\n    </li>\n  </ul>\n</div>","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { PatternLibComponent } from './pattern-lib.component';\nimport { DatatableComponent } from './datatable/datatable.component';\nimport { ButtonComponent } from './button/button.component';\nimport { AvatarComponent } from './avatar/avatar.component';\nimport { BadgeComponent } from './badge/badge.component';\nimport { DropdownComponent } from './dropdown/dropdown.component';\nimport { FormComponent } from './form/form.component';\nimport { SearchInputComponent } from './search-input/search-input.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { StatusIndicatorComponent } from './status-indicator/status-indicator.component';\nimport { StripComponent } from './strip/strip.component';\nimport { TableComponent } from './table/table.component';\nimport { DropdownExpandedComponent } from './dropdown-expanded/dropdown-expanded.component';\nimport { FormsModule } from '@angular/forms';\nimport { DealsCardComponent } from './deals-card/deals-card.component';\nimport { ClickOutsideDirective } from './directives/click-outside.directive';\nimport { RouterModule } from '@angular/router';\nimport { ProgressBarComponent } from './progress-bar/progress-bar.component';\nimport { DropdownStatusComponent } from './dropdown-status/dropdown-status.component';\n\n@NgModule({\n  declarations: [\n    ClickOutsideDirective,\n    PatternLibComponent,\n    DatatableComponent,\n    ButtonComponent,\n    AvatarComponent,\n    BadgeComponent,\n    DropdownComponent,\n    FormComponent,\n    SearchInputComponent,\n    SidebarComponent,\n    StatusIndicatorComponent,\n    StripComponent,\n    TableComponent,\n    DropdownExpandedComponent,\n    DealsCardComponent,\n    ProgressBarComponent,\n    DropdownStatusComponent,\n  ],\n  imports: [CommonModule, BrowserModule, FormsModule, RouterModule],\n  exports: [\n    ClickOutsideDirective,\n    PatternLibComponent,\n    DatatableComponent,\n    ButtonComponent,\n    AvatarComponent,\n    BadgeComponent,\n    DropdownComponent,\n    FormComponent,\n    SearchInputComponent,\n    SidebarComponent,\n    StatusIndicatorComponent,\n    StripComponent,\n    TableComponent,\n    DropdownExpandedComponent,\n    DealsCardComponent,\n    ProgressBarComponent,\n    DropdownStatusComponent,\n  ],\n})\nexport class PatternLibModule { }\n","/*\n * Public API Surface of pattern-lib\n */\n\nexport * from './lib/pattern-lib.service';\nexport * from './lib/pattern-lib.component';\nexport * from './lib/pattern-lib.module';\n\nexport * from './lib/avatar/avatar.component';\nexport * from './lib/badge/badge.component';\nexport * from './lib/button/button.component';\nexport * from './lib/datatable/datatable.component';\nexport * from './lib/deals-card/deals-card.component';\nexport * from './lib/dropdown/dropdown.component';\nexport * from './lib/dropdown-expanded/dropdown-expanded.component';\nexport * from './lib/form/form.component';\nexport * from './lib/search-input/search-input.component';\nexport * from './lib/sidebar/sidebar.component';\nexport * from './lib/status-indicator/status-indicator.component';\nexport * from './lib/strip/strip.component';\nexport * from './lib/table/table.component';\nexport * from './lib/progress-bar/progress-bar.component';\nexport * from './lib/dropdown-status/dropdown-status.component';\n\nexport * from './lib/directives/click-outside.directive';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i2","i3.ClickOutsideDirective","i2.ClickOutsideDirective"],"mappings":"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"}