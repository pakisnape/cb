import { Component, EventEmitter, Input, Output } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "../directives/click-outside.directive";
export class TableComponent {
    constructor(elem) {
        this.elem = elem;
        this.isLoading = true;
        this.customSortable = false;
        this.sortable = true;
        this.tableClass = '';
        this.tableId = 'cb-table';
        this.customSort = new EventEmitter();
        this.rowClick = new EventEmitter();
        this.dropdownOpen = false;
        this.currentValueChange = new EventEmitter();
        this.actionClick = new EventEmitter();
    }
    get dropdownElement() { return this.elem.nativeElement.querySelector('.dropdown-list'); }
    ngOnInit() {
        // if (this.columns != undefined && this.sortable) {
        //   let first_sortable_column = this.columns.filter((column: TableColumn) => {
        //     return column.sortable;
        //   });
        //   this.sort = {
        //     column: first_sortable_column[0].key,
        //     direction: 1,
        //   };
        // }
    }
    onRowItemClick1(data) {
        this.selectedRow = data;
        this.rowClick.emit(data);
    }
    actionClicked(data) {
        this.actionClick.emit(data);
    }
    closeDropdown() {
        this.dropdownElement.setAttribute('aria-expanded', "false");
        this.dropdownOpen = false;
    }
    select(value) {
        this.closeDropdown();
        this.currentValueChange.emit(value);
    }
    toggleDropdown(id) {
        this.clickedRow = id;
        this.dropdownOpen = !this.dropdownOpen;
        this.dropdownElement.setAttribute('aria-expanded', this.dropdownOpen ? "true" : "false");
    }
    onSortColumn(column) {
        if (this.sortable && column.sortable && !this.customSortable) {
            if (this.sort.direction == 1) {
                this.sort.direction = -1;
            }
            else {
                this.sort.direction = 1;
            }
            if (this.rows != undefined) {
                this.rows.sort((a, b) => {
                    a = a[column.key].value.toString().toLowerCase();
                    b = b[column.key].value.toString().toLowerCase();
                    return a.localeCompare(b) * this.sort.direction;
                });
            }
            this.sort.column = column.key;
        }
        else if (this.customSortable) {
            if (this.sort.direction == 1) {
                this.sort.direction = -1;
            }
            else {
                this.sort.direction = 1;
            }
            this.sort.column = column.key;
            this.customSort.emit(this.sort);
        }
    }
}
TableComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.1", ngImport: i0, type: TableComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });
TableComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.0.1", type: TableComponent, selector: "cb-table", inputs: { sort: "sort", isLoading: "isLoading", customSortable: "customSortable", sortable: "sortable", columns: "columns", rows: "rows", actionDropdownItems: "actionDropdownItems", tableClass: "tableClass", tableId: "tableId", actions: "actions" }, outputs: { customSort: "customSort", rowClick: "rowClick", currentValueChange: "currentValueChange", actionClick: "actionClick" }, ngImport: i0, template: "<table class=\"table {{ tableClass }}\" id=\"{{ tableId }}\">\n  <thead>\n    <tr>\n      <th colspan=\"14\" class=\"colspaned\">\n        <table class=\"nested-table\">\n          <colgroup>\n            <col\n              class=\"{{ column.className }}\"\n              *ngFor=\"let column of columns\"\n            />\n          </colgroup>\n          <tr>\n            <th\n              *ngFor=\"let column of columns\"\n              (click)=\"onSortColumn(column)\"\n              class=\"{{ column.className }}\"\n              [ngClass]=\"{\n                sort: column.sortable && sortable\n              }\"\n            >\n              <ng-container *ngIf=\"column.type != 'action'\">\n                {{ column.label }}\n                <img\n                  *ngIf=\"\n                    sort.column == column.key &&\n                    sort.direction == 1 &&\n                    column.sortable &&\n                    sortable\n                  \"\n                  src=\"./assets/icons/arrowdown.svg\"\n                  alt=\"asc\"\n                />\n                <img\n                  *ngIf=\"\n                    sort.column == column.key &&\n                    sort.direction == -1 &&\n                    column.sortable &&\n                    sortable\n                  \"\n                  src=\"./assets/icons/arrowup.svg\"\n                  alt=\"desc\"\n                />\n              </ng-container>\n              <ng-container *ngIf=\"column.type == 'action'\">\n                <button\n                  class=\"settings-btn\"\n                  *ngIf=\"column.label === '' && column.showGear\"\n                >\n                  <img src=\"./assets/icons/nav-bar/settings.svg\" />\n                </button>\n                <ng-container *ngIf=\"column.label !== ''\">{{\n                  column.label\n                }}</ng-container>\n              </ng-container>\n            </th>\n          </tr>\n        </table>\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr class=\"no-data-row\" *ngIf=\"rows.length === 0 && !isLoading\">\n      <td colspan=\"13\">\n        <span class=\"text\">No records available!</span>\n      </td>\n    </tr>\n    <ng-container *ngIf=\"rows.length > 0\">\n      <tr\n        class=\"expandable\"\n        *ngFor=\"let data of rows; let id = index\"\n        (click)=\"onRowItemClick1(data)\"\n      >\n        <td colspan=\"14\" class=\"colspaned\">\n          <table class=\"nested-table\">\n            <colgroup>\n              <col\n                class=\"{{ column.className }}\"\n                *ngFor=\"let column of columns\"\n              />\n            </colgroup>\n            <tr>\n              <td\n                [attr.data-label]=\"column.label\"\n                *ngFor=\"let column of columns\"\n                class=\"{{ column.className }}\"\n                [ngClass]=\"{\n                  'icon-td':\n                    column.type === 'img-text' || column.type === 'avatar',\n                  actions: column.type === 'action'\n                }\"\n              >\n                <ng-container *ngIf=\"column.type == 'linked'\">\n                  <a\n                    *ngIf=\"data[column.key].img\"\n                    (click)=\"actionClicked({data, action: 'linked-click'});$event.stopPropagation()\"\n                    class=\"link-icon\"\n                    ><img src=\"{{ data[column.key].img }}\" alt=\"Link\"\n                  /></a>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'normal'\">\n                  {{ data[column.key].value }}\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'badge-with-date'\">\n                  {{ data[column.key].value }}\n                  <div>\n                    <small class=\"text-small grey-text\">{{\n                      data[column.key].badgeLabel\n                    }}</small>\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'currency'\">\n                  {{ data[column.key].value | currency: column.currencyType }}\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'status'\">\n                  <span class=\"status {{ data[column.key].value }}\"></span>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'img-progress'\">\n                  <div>\n                    <img\n                      *ngIf=\"data[column.key].img\"\n                      [src]=\"data[column.key].img\"\n                      alt=\"Flag\"\n                    />\n                    {{ data[column.key].label }}\n                  </div>\n                  <div class=\"progress-bar-lined\">\n                    <div\n                      class=\"progress-indication {{ data[column.key].status }}\"\n                      [ngStyle]=\"{ width: data[column.key].value }\"\n                    ></div>\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'text-medium'\">\n                  <span class=\"text-medium\">{{ data[column.key].value }}</span>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'img-text'\">\n                  <div>\n                    <img\n                      src=\"{{ data[column.key].img }}\"\n                      alt=\"{{ column.label }}\"\n                    />\n                    {{ data[column.key].value }}\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'avatar'\">\n                  <div class=\"avatar {{ data[column.key].avatar }}\">\n                    <span>{{ data[column.key].value }}</span>\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'badge'\">\n                  <label class=\"badge {{ data[column.key].value }}\">{{\n                    data[column.key].label\n                  }}</label>\n                  <img\n                    (click)=\"actionClicked({data, action: 'badge-img-click'});$event.stopPropagation()\"\n                    *ngIf=\"data[column.key].img\"\n                    class=\"mt2\"\n                    src=\"{{ data[column.key].img }}\"\n                    alt=\"{{ column.label }}\"\n                  />\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'badge-label'\">\n                  <span class=\"badge mr2 {{ data[column.key].status }}\"\n                    >&nbsp;{{ data[column.key].badgeLabel }}</span\n                  >{{ data[column.key].value }}\n                </ng-container>\n                <div class=\"list-action\" *ngIf=\"column.type == 'action'\">\n                  <ng-container *ngFor=\"let action of actions; let i = index\">\n                    <button\n                      *ngIf=\"\n                        action.isButton && data[column.key][i] && action.img\n                      \"\n                      (click)=\"actionClicked({data, action: action.value});$event.stopPropagation()\"\n                      class=\"{{ action.className }}\"\n                    >\n                      <img [src]=\"action.img\" />\n                    </button>\n                    <div\n                      id=\"{{ id }}\"\n                      class=\"customdropdown\"\n                      *ngIf=\"action.isDropdown && data['actionDropdownItems']\"\n                    >\n                      <a\n                        aria-haspopup=\"listbox\"\n                        aria-labelledby=\"dropdown-label\"\n                        (click)=\"toggleDropdown(id); $event.stopPropagation()\"\n                        (clickOutside)=\"dropdownOpen = false\"\n                      >\n                        <img [src]=\"action.img\" />\n                      </a>\n                      <ul\n                        class=\"dropdown-list\"\n                        role=\"listbox\"\n                        aria-expanded=\"false\"\n                        [ngClass]=\"{\n                          'dropdown-open': dropdownOpen && id == clickedRow\n                        }\"\n                      >\n                        <li\n                          *ngFor=\"let o of data['actionDropdownItems']\"\n                          tabindex=\"0\"\n                          (click)=\"actionClicked({data, action: o.value});$event.stopPropagation()\"\n                          role=\"option\"\n                          [innerHTML]=\"o.key\"\n                        ></li>\n                      </ul>\n                    </div>\n                    <button\n                      *ngIf=\"\n                        !action.img && data[column.key][i] && action.isButton\n                      \"\n                      (click)=\"actionClicked({data, action: action.value});$event.stopPropagation()\"\n                      class=\"{{ action.className }}\"\n                    >\n                      {{ action.label }}\n                    </button>\n                  </ng-container>\n                </div>\n              </td>\n            </tr>\n            <tr class=\"expanded\" *ngFor=\"let order of data.linkedOrders\">\n              <td\n                [attr.data-label]=\"column.label\"\n                *ngFor=\"let column of columns\"\n                class=\"{{ column.className }}\"\n                [ngClass]=\"{\n                  'icon-td':\n                    column.type === 'img-text' || column.type === 'avatar',\n                  actions: column.type === 'action',\n                  linked: column.type === 'linked'\n                }\"\n              >\n                <ng-container *ngIf=\"column.type == 'linked'\">\n                  <span class=\"h-line\"></span>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'normal'\">\n                  {{ order[column.key].value }}\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'badge-with-date'\">\n                  {{ order[column.key].value }}\n                  <div>\n                    <small class=\"text-small grey-text\">{{\n                      order[column.key].badgeLabel\n                    }}</small>\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'currency'\">\n                  {{ order[column.key].value | currency: column.currencyType }}\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'status'\">\n                  <!-- <span class=\"status {{ order[column.key].value }}\"></span> -->\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'img-progress'\">\n                  <div>\n                    <img\n                      *ngIf=\"order[column.key].img\"\n                      [src]=\"order[column.key].img\"\n                      alt=\"Flag\"\n                    />\n                    {{ order[column.key].label }}\n                  </div>\n                  <div class=\"progress-bar-lined\">\n                    <div\n                      class=\"progress-indication {{ order[column.key].status }}\"\n                      [ngStyle]=\"{ width: order[column.key].value }\"\n                    ></div>\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'text-medium'\">\n                  <span class=\"text-medium\">{{ order[column.key].value }}</span>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'img-text'\">\n                  <div>\n                    <img\n                      src=\"{{ order[column.key].img }}\"\n                      alt=\"{{ column.label }}\"\n                    />\n                    {{ order[column.key].value }}\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'avatar'\">\n                  <div class=\"avatar {{ order[column.key].avatar }}\">\n                    <span>{{ order[column.key].value }}</span>\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'badge'\">\n                  <label class=\"badge {{ order[column.key].value }}\">{{\n                    order[column.key].label\n                  }}</label>\n                  <img\n                    (click)=\"actionClicked({order, action: 'badge-img-click'});$event.stopPropagation()\"\n                    *ngIf=\"order[column.key].img\"\n                    class=\"mt2\"\n                    src=\"{{ order[column.key].img }}\"\n                    alt=\"{{ column.label }}\"\n                  />\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'badge-label'\">\n                  <span class=\"badge mr2 {{ order[column.key].status }}\"\n                    >&nbsp;{{ order[column.key].badgeLabel }}</span\n                  >{{ order[column.key].value }}\n                </ng-container>\n                <div class=\"list-action\" *ngIf=\"column.type == 'action'\">\n                  <ng-container *ngFor=\"let action of actions; let i = index\">\n                    <button\n                      *ngIf=\"\n                        action.isButton && order[column.key][i] && action.img\n                      \"\n                      (click)=\"actionClicked({order, action: action.value+'-linked'});$event.stopPropagation()\"\n                      class=\"{{ action.className }}\"\n                    >\n                      <img [src]=\"action.img\" />\n                    </button>\n                    <div\n                      id=\"{{ id }}\"\n                      class=\"customdropdown\"\n                      *ngIf=\"action.isDropdown && order['actionDropdownItems']\"\n                    >\n                      <a\n                        aria-haspopup=\"listbox\"\n                        aria-labelledby=\"dropdown-label\"\n                        (click)=\"toggleDropdown(id); $event.stopPropagation()\"\n                        (clickOutside)=\"dropdownOpen = false\"\n                      >\n                        <img [src]=\"action.img\" />\n                      </a>\n                      <ul\n                        class=\"dropdown-list\"\n                        role=\"listbox\"\n                        aria-expanded=\"false\"\n                        [ngClass]=\"{\n                          'dropdown-open': dropdownOpen && id == clickedRow\n                        }\"\n                      >\n                        <li\n                          *ngFor=\"let o of order['actionDropdownItems']\"\n                          tabindex=\"0\"\n                          (click)=\"actionClicked({order, action: o.value+'-linked'});$event.stopPropagation()\"\n                          role=\"option\"\n                          [innerHTML]=\"o.key\"\n                        ></li>\n                      </ul>\n                    </div>\n                    <button\n                      *ngIf=\"\n                        !action.img && order[column.key][i] && action.isButton\n                      \"\n                      (click)=\"actionClicked({order, action: action.value+'-linked'});$event.stopPropagation()\"\n                      class=\"{{ action.className }}\"\n                    >\n                      {{ action.label }}\n                    </button>\n                  </ng-container>\n                </div>\n              </td>\n            </tr>\n          </table>\n        </td>\n      </tr>\n    </ng-container>\n  </tbody>\n</table>\n", styles: [""], dependencies: [{ kind: "directive", type: i1.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i1.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { kind: "directive", type: i2.ClickOutsideDirective, selector: "[clickOutside]", outputs: ["clickOutside"] }, { kind: "pipe", type: i1.CurrencyPipe, name: "currency" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.1", ngImport: i0, type: TableComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cb-table', template: "<table class=\"table {{ tableClass }}\" id=\"{{ tableId }}\">\n  <thead>\n    <tr>\n      <th colspan=\"14\" class=\"colspaned\">\n        <table class=\"nested-table\">\n          <colgroup>\n            <col\n              class=\"{{ column.className }}\"\n              *ngFor=\"let column of columns\"\n            />\n          </colgroup>\n          <tr>\n            <th\n              *ngFor=\"let column of columns\"\n              (click)=\"onSortColumn(column)\"\n              class=\"{{ column.className }}\"\n              [ngClass]=\"{\n                sort: column.sortable && sortable\n              }\"\n            >\n              <ng-container *ngIf=\"column.type != 'action'\">\n                {{ column.label }}\n                <img\n                  *ngIf=\"\n                    sort.column == column.key &&\n                    sort.direction == 1 &&\n                    column.sortable &&\n                    sortable\n                  \"\n                  src=\"./assets/icons/arrowdown.svg\"\n                  alt=\"asc\"\n                />\n                <img\n                  *ngIf=\"\n                    sort.column == column.key &&\n                    sort.direction == -1 &&\n                    column.sortable &&\n                    sortable\n                  \"\n                  src=\"./assets/icons/arrowup.svg\"\n                  alt=\"desc\"\n                />\n              </ng-container>\n              <ng-container *ngIf=\"column.type == 'action'\">\n                <button\n                  class=\"settings-btn\"\n                  *ngIf=\"column.label === '' && column.showGear\"\n                >\n                  <img src=\"./assets/icons/nav-bar/settings.svg\" />\n                </button>\n                <ng-container *ngIf=\"column.label !== ''\">{{\n                  column.label\n                }}</ng-container>\n              </ng-container>\n            </th>\n          </tr>\n        </table>\n      </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr class=\"no-data-row\" *ngIf=\"rows.length === 0 && !isLoading\">\n      <td colspan=\"13\">\n        <span class=\"text\">No records available!</span>\n      </td>\n    </tr>\n    <ng-container *ngIf=\"rows.length > 0\">\n      <tr\n        class=\"expandable\"\n        *ngFor=\"let data of rows; let id = index\"\n        (click)=\"onRowItemClick1(data)\"\n      >\n        <td colspan=\"14\" class=\"colspaned\">\n          <table class=\"nested-table\">\n            <colgroup>\n              <col\n                class=\"{{ column.className }}\"\n                *ngFor=\"let column of columns\"\n              />\n            </colgroup>\n            <tr>\n              <td\n                [attr.data-label]=\"column.label\"\n                *ngFor=\"let column of columns\"\n                class=\"{{ column.className }}\"\n                [ngClass]=\"{\n                  'icon-td':\n                    column.type === 'img-text' || column.type === 'avatar',\n                  actions: column.type === 'action'\n                }\"\n              >\n                <ng-container *ngIf=\"column.type == 'linked'\">\n                  <a\n                    *ngIf=\"data[column.key].img\"\n                    (click)=\"actionClicked({data, action: 'linked-click'});$event.stopPropagation()\"\n                    class=\"link-icon\"\n                    ><img src=\"{{ data[column.key].img }}\" alt=\"Link\"\n                  /></a>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'normal'\">\n                  {{ data[column.key].value }}\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'badge-with-date'\">\n                  {{ data[column.key].value }}\n                  <div>\n                    <small class=\"text-small grey-text\">{{\n                      data[column.key].badgeLabel\n                    }}</small>\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'currency'\">\n                  {{ data[column.key].value | currency: column.currencyType }}\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'status'\">\n                  <span class=\"status {{ data[column.key].value }}\"></span>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'img-progress'\">\n                  <div>\n                    <img\n                      *ngIf=\"data[column.key].img\"\n                      [src]=\"data[column.key].img\"\n                      alt=\"Flag\"\n                    />\n                    {{ data[column.key].label }}\n                  </div>\n                  <div class=\"progress-bar-lined\">\n                    <div\n                      class=\"progress-indication {{ data[column.key].status }}\"\n                      [ngStyle]=\"{ width: data[column.key].value }\"\n                    ></div>\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'text-medium'\">\n                  <span class=\"text-medium\">{{ data[column.key].value }}</span>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'img-text'\">\n                  <div>\n                    <img\n                      src=\"{{ data[column.key].img }}\"\n                      alt=\"{{ column.label }}\"\n                    />\n                    {{ data[column.key].value }}\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'avatar'\">\n                  <div class=\"avatar {{ data[column.key].avatar }}\">\n                    <span>{{ data[column.key].value }}</span>\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'badge'\">\n                  <label class=\"badge {{ data[column.key].value }}\">{{\n                    data[column.key].label\n                  }}</label>\n                  <img\n                    (click)=\"actionClicked({data, action: 'badge-img-click'});$event.stopPropagation()\"\n                    *ngIf=\"data[column.key].img\"\n                    class=\"mt2\"\n                    src=\"{{ data[column.key].img }}\"\n                    alt=\"{{ column.label }}\"\n                  />\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'badge-label'\">\n                  <span class=\"badge mr2 {{ data[column.key].status }}\"\n                    >&nbsp;{{ data[column.key].badgeLabel }}</span\n                  >{{ data[column.key].value }}\n                </ng-container>\n                <div class=\"list-action\" *ngIf=\"column.type == 'action'\">\n                  <ng-container *ngFor=\"let action of actions; let i = index\">\n                    <button\n                      *ngIf=\"\n                        action.isButton && data[column.key][i] && action.img\n                      \"\n                      (click)=\"actionClicked({data, action: action.value});$event.stopPropagation()\"\n                      class=\"{{ action.className }}\"\n                    >\n                      <img [src]=\"action.img\" />\n                    </button>\n                    <div\n                      id=\"{{ id }}\"\n                      class=\"customdropdown\"\n                      *ngIf=\"action.isDropdown && data['actionDropdownItems']\"\n                    >\n                      <a\n                        aria-haspopup=\"listbox\"\n                        aria-labelledby=\"dropdown-label\"\n                        (click)=\"toggleDropdown(id); $event.stopPropagation()\"\n                        (clickOutside)=\"dropdownOpen = false\"\n                      >\n                        <img [src]=\"action.img\" />\n                      </a>\n                      <ul\n                        class=\"dropdown-list\"\n                        role=\"listbox\"\n                        aria-expanded=\"false\"\n                        [ngClass]=\"{\n                          'dropdown-open': dropdownOpen && id == clickedRow\n                        }\"\n                      >\n                        <li\n                          *ngFor=\"let o of data['actionDropdownItems']\"\n                          tabindex=\"0\"\n                          (click)=\"actionClicked({data, action: o.value});$event.stopPropagation()\"\n                          role=\"option\"\n                          [innerHTML]=\"o.key\"\n                        ></li>\n                      </ul>\n                    </div>\n                    <button\n                      *ngIf=\"\n                        !action.img && data[column.key][i] && action.isButton\n                      \"\n                      (click)=\"actionClicked({data, action: action.value});$event.stopPropagation()\"\n                      class=\"{{ action.className }}\"\n                    >\n                      {{ action.label }}\n                    </button>\n                  </ng-container>\n                </div>\n              </td>\n            </tr>\n            <tr class=\"expanded\" *ngFor=\"let order of data.linkedOrders\">\n              <td\n                [attr.data-label]=\"column.label\"\n                *ngFor=\"let column of columns\"\n                class=\"{{ column.className }}\"\n                [ngClass]=\"{\n                  'icon-td':\n                    column.type === 'img-text' || column.type === 'avatar',\n                  actions: column.type === 'action',\n                  linked: column.type === 'linked'\n                }\"\n              >\n                <ng-container *ngIf=\"column.type == 'linked'\">\n                  <span class=\"h-line\"></span>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'normal'\">\n                  {{ order[column.key].value }}\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'badge-with-date'\">\n                  {{ order[column.key].value }}\n                  <div>\n                    <small class=\"text-small grey-text\">{{\n                      order[column.key].badgeLabel\n                    }}</small>\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'currency'\">\n                  {{ order[column.key].value | currency: column.currencyType }}\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'status'\">\n                  <!-- <span class=\"status {{ order[column.key].value }}\"></span> -->\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'img-progress'\">\n                  <div>\n                    <img\n                      *ngIf=\"order[column.key].img\"\n                      [src]=\"order[column.key].img\"\n                      alt=\"Flag\"\n                    />\n                    {{ order[column.key].label }}\n                  </div>\n                  <div class=\"progress-bar-lined\">\n                    <div\n                      class=\"progress-indication {{ order[column.key].status }}\"\n                      [ngStyle]=\"{ width: order[column.key].value }\"\n                    ></div>\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'text-medium'\">\n                  <span class=\"text-medium\">{{ order[column.key].value }}</span>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'img-text'\">\n                  <div>\n                    <img\n                      src=\"{{ order[column.key].img }}\"\n                      alt=\"{{ column.label }}\"\n                    />\n                    {{ order[column.key].value }}\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'avatar'\">\n                  <div class=\"avatar {{ order[column.key].avatar }}\">\n                    <span>{{ order[column.key].value }}</span>\n                  </div>\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'badge'\">\n                  <label class=\"badge {{ order[column.key].value }}\">{{\n                    order[column.key].label\n                  }}</label>\n                  <img\n                    (click)=\"actionClicked({order, action: 'badge-img-click'});$event.stopPropagation()\"\n                    *ngIf=\"order[column.key].img\"\n                    class=\"mt2\"\n                    src=\"{{ order[column.key].img }}\"\n                    alt=\"{{ column.label }}\"\n                  />\n                </ng-container>\n                <ng-container *ngIf=\"column.type == 'badge-label'\">\n                  <span class=\"badge mr2 {{ order[column.key].status }}\"\n                    >&nbsp;{{ order[column.key].badgeLabel }}</span\n                  >{{ order[column.key].value }}\n                </ng-container>\n                <div class=\"list-action\" *ngIf=\"column.type == 'action'\">\n                  <ng-container *ngFor=\"let action of actions; let i = index\">\n                    <button\n                      *ngIf=\"\n                        action.isButton && order[column.key][i] && action.img\n                      \"\n                      (click)=\"actionClicked({order, action: action.value+'-linked'});$event.stopPropagation()\"\n                      class=\"{{ action.className }}\"\n                    >\n                      <img [src]=\"action.img\" />\n                    </button>\n                    <div\n                      id=\"{{ id }}\"\n                      class=\"customdropdown\"\n                      *ngIf=\"action.isDropdown && order['actionDropdownItems']\"\n                    >\n                      <a\n                        aria-haspopup=\"listbox\"\n                        aria-labelledby=\"dropdown-label\"\n                        (click)=\"toggleDropdown(id); $event.stopPropagation()\"\n                        (clickOutside)=\"dropdownOpen = false\"\n                      >\n                        <img [src]=\"action.img\" />\n                      </a>\n                      <ul\n                        class=\"dropdown-list\"\n                        role=\"listbox\"\n                        aria-expanded=\"false\"\n                        [ngClass]=\"{\n                          'dropdown-open': dropdownOpen && id == clickedRow\n                        }\"\n                      >\n                        <li\n                          *ngFor=\"let o of order['actionDropdownItems']\"\n                          tabindex=\"0\"\n                          (click)=\"actionClicked({order, action: o.value+'-linked'});$event.stopPropagation()\"\n                          role=\"option\"\n                          [innerHTML]=\"o.key\"\n                        ></li>\n                      </ul>\n                    </div>\n                    <button\n                      *ngIf=\"\n                        !action.img && order[column.key][i] && action.isButton\n                      \"\n                      (click)=\"actionClicked({order, action: action.value+'-linked'});$event.stopPropagation()\"\n                      class=\"{{ action.className }}\"\n                    >\n                      {{ action.label }}\n                    </button>\n                  </ng-container>\n                </div>\n              </td>\n            </tr>\n          </table>\n        </td>\n      </tr>\n    </ng-container>\n  </tbody>\n</table>\n" }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { sort: [{
                type: Input,
                args: ['sort']
            }], isLoading: [{
                type: Input,
                args: ['isLoading']
            }], customSortable: [{
                type: Input,
                args: ['customSortable']
            }], sortable: [{
                type: Input,
                args: ['sortable']
            }], columns: [{
                type: Input,
                args: ['columns']
            }], rows: [{
                type: Input,
                args: ['rows']
            }], actionDropdownItems: [{
                type: Input,
                args: ['actionDropdownItems']
            }], tableClass: [{
                type: Input,
                args: ['tableClass']
            }], tableId: [{
                type: Input,
                args: ['tableId']
            }], actions: [{
                type: Input,
                args: ['actions']
            }], customSort: [{
                type: Output,
                args: ['customSort']
            }], rowClick: [{
                type: Output,
                args: ['rowClick']
            }], currentValueChange: [{
                type: Output
            }], actionClick: [{
                type: Output,
                args: ['actionClick']
            }] } });
//# sourceMappingURL=data:application/json;base64,