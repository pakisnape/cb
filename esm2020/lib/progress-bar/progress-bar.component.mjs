import { Component, Input } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class ProgressBarComponent {
    constructor() {
        this.date = '';
        this.percentage = '';
        this.statuses = [];
    }
}
ProgressBarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.1", ngImport: i0, type: ProgressBarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });
ProgressBarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.0.1", type: ProgressBarComponent, selector: "cb-progress-bar", inputs: { date: "date", percentage: "percentage", statuses: "statuses" }, ngImport: i0, template: "<div class=\"progress-indicator mt8\">\n  <div class=\"item\">\n    <div class=\"percentage d-flex justify-content-start\">0%</div>\n    <div class=\"bar {{ statuses[0] ? statuses[0] : '' }}\"></div>\n    <div class=\"status-text\">\n      <span class=\"status\">Sent</span><span class=\"date\">{{ date }}</span>\n    </div>\n  </div>\n  <div class=\"item\">\n    <div class=\"percentage\"></div>\n    <div class=\"bar {{ statuses[1] ? statuses[1] : '' }}\"></div>\n    <div class=\"status-text\">\n      <span class=\"status\">Acknowledged</span\n      ><span class=\"date\">{{ date }}</span>\n    </div>\n  </div>\n  <div class=\"item\">\n    <div class=\"percentage d-flex justify-content-center flagtext\">\n      <img src=\"./assets/icons/flag2.svg\" alt=\"Flag\" width=\"20\" /><span>{{\n        date\n      }}</span>\n    </div>\n    <div class=\"bar {{ statuses[2] ? statuses[2] : '' }}\"></div>\n    <div class=\"status-text\">\n      <span class=\"status\">In Progress</span\n      ><span class=\"date\">{{ date }}</span>\n    </div>\n  </div>\n  <div class=\"item\">\n    <div class=\"percentage\"></div>\n    <div class=\"bar {{ statuses[3] ? statuses[3] : '' }}\"></div>\n    <div class=\"status-text\">\n      <span class=\"status\">Confirmed</span><span class=\"date\">{{ date }}</span>\n    </div>\n  </div>\n  <div class=\"item\">\n    <div class=\"percentage\"></div>\n    <div class=\"bar {{ statuses[4] ? statuses[4] : '' }}\"></div>\n    <div class=\"status-text\">\n      <span class=\"status\">Delivered</span><span class=\"date\">{{ date }}</span>\n    </div>\n  </div>\n  <div class=\"item\">\n    <div class=\"percentage d-flex justify-content-end flaglate\">\n      <label class=\"checkbox-box mr3\"\n        >Flag as Late\n        <input type=\"checkbox\" />\n        <span class=\"checkmark\"></span> </label\n      >100%\n    </div>\n    <div class=\"bar {{ statuses[5] ? statuses[5] : '' }}\"></div>\n    <div class=\"status-text text-right\">\n      <span class=\"status\">Completed</span><span class=\"date\">{{ date }}</span>\n    </div>\n  </div>\n  <div\n    *ngIf=\"percentage != ''\"\n    class=\"circular-indicator\"\n    [style.left]=\"percentage\"\n  >\n    <span class=\"perc-value\">{{ percentage }}</span>\n    <span class=\"circle\"></span>\n  </div>\n</div>\n", styles: [""], dependencies: [{ kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.1", ngImport: i0, type: ProgressBarComponent, decorators: [{
            type: Component,
            args: [{ selector: 'cb-progress-bar', template: "<div class=\"progress-indicator mt8\">\n  <div class=\"item\">\n    <div class=\"percentage d-flex justify-content-start\">0%</div>\n    <div class=\"bar {{ statuses[0] ? statuses[0] : '' }}\"></div>\n    <div class=\"status-text\">\n      <span class=\"status\">Sent</span><span class=\"date\">{{ date }}</span>\n    </div>\n  </div>\n  <div class=\"item\">\n    <div class=\"percentage\"></div>\n    <div class=\"bar {{ statuses[1] ? statuses[1] : '' }}\"></div>\n    <div class=\"status-text\">\n      <span class=\"status\">Acknowledged</span\n      ><span class=\"date\">{{ date }}</span>\n    </div>\n  </div>\n  <div class=\"item\">\n    <div class=\"percentage d-flex justify-content-center flagtext\">\n      <img src=\"./assets/icons/flag2.svg\" alt=\"Flag\" width=\"20\" /><span>{{\n        date\n      }}</span>\n    </div>\n    <div class=\"bar {{ statuses[2] ? statuses[2] : '' }}\"></div>\n    <div class=\"status-text\">\n      <span class=\"status\">In Progress</span\n      ><span class=\"date\">{{ date }}</span>\n    </div>\n  </div>\n  <div class=\"item\">\n    <div class=\"percentage\"></div>\n    <div class=\"bar {{ statuses[3] ? statuses[3] : '' }}\"></div>\n    <div class=\"status-text\">\n      <span class=\"status\">Confirmed</span><span class=\"date\">{{ date }}</span>\n    </div>\n  </div>\n  <div class=\"item\">\n    <div class=\"percentage\"></div>\n    <div class=\"bar {{ statuses[4] ? statuses[4] : '' }}\"></div>\n    <div class=\"status-text\">\n      <span class=\"status\">Delivered</span><span class=\"date\">{{ date }}</span>\n    </div>\n  </div>\n  <div class=\"item\">\n    <div class=\"percentage d-flex justify-content-end flaglate\">\n      <label class=\"checkbox-box mr3\"\n        >Flag as Late\n        <input type=\"checkbox\" />\n        <span class=\"checkmark\"></span> </label\n      >100%\n    </div>\n    <div class=\"bar {{ statuses[5] ? statuses[5] : '' }}\"></div>\n    <div class=\"status-text text-right\">\n      <span class=\"status\">Completed</span><span class=\"date\">{{ date }}</span>\n    </div>\n  </div>\n  <div\n    *ngIf=\"percentage != ''\"\n    class=\"circular-indicator\"\n    [style.left]=\"percentage\"\n  >\n    <span class=\"perc-value\">{{ percentage }}</span>\n    <span class=\"circle\"></span>\n  </div>\n</div>\n" }]
        }], propDecorators: { date: [{
                type: Input,
                args: ['date']
            }], percentage: [{
                type: Input,
                args: ['percentage']
            }], statuses: [{
                type: Input,
                args: ['statuses']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZ3Jlc3MtYmFyLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3BhdHRlcm4tbGliL3NyYy9saWIvcHJvZ3Jlc3MtYmFyL3Byb2dyZXNzLWJhci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9wYXR0ZXJuLWxpYi9zcmMvbGliL3Byb2dyZXNzLWJhci9wcm9ncmVzcy1iYXIuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7OztBQU9qRCxNQUFNLE9BQU8sb0JBQW9CO0lBTGpDO1FBTWlCLFNBQUksR0FBVyxFQUFFLENBQUM7UUFDWixlQUFVLEdBQVcsRUFBRSxDQUFDO1FBQzFCLGFBQVEsR0FBUSxFQUFFLENBQUM7S0FDdkM7O2lIQUpZLG9CQUFvQjtxR0FBcEIsb0JBQW9CLGlJQ1BqQyxtd0VBZ0VBOzJGRHpEYSxvQkFBb0I7a0JBTGhDLFNBQVM7K0JBQ0UsaUJBQWlCOzhCQUtaLElBQUk7c0JBQWxCLEtBQUs7dUJBQUMsTUFBTTtnQkFDUSxVQUFVO3NCQUE5QixLQUFLO3VCQUFDLFlBQVk7Z0JBQ0EsUUFBUTtzQkFBMUIsS0FBSzt1QkFBQyxVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjYi1wcm9ncmVzcy1iYXInLFxuICB0ZW1wbGF0ZVVybDogJy4vcHJvZ3Jlc3MtYmFyLmNvbXBvbmVudC5odG1sJyxcbiAgc3R5bGVVcmxzOiBbJy4vcHJvZ3Jlc3MtYmFyLmNvbXBvbmVudC5zY3NzJ10sXG59KVxuZXhwb3J0IGNsYXNzIFByb2dyZXNzQmFyQ29tcG9uZW50IHtcbiAgQElucHV0KCdkYXRlJykgZGF0ZTogc3RyaW5nID0gJyc7XG4gIEBJbnB1dCgncGVyY2VudGFnZScpIHBlcmNlbnRhZ2U6IHN0cmluZyA9ICcnO1xuICBASW5wdXQoJ3N0YXR1c2VzJykgc3RhdHVzZXM6IGFueSA9IFtdO1xufVxuIiwiPGRpdiBjbGFzcz1cInByb2dyZXNzLWluZGljYXRvciBtdDhcIj5cbiAgPGRpdiBjbGFzcz1cIml0ZW1cIj5cbiAgICA8ZGl2IGNsYXNzPVwicGVyY2VudGFnZSBkLWZsZXgganVzdGlmeS1jb250ZW50LXN0YXJ0XCI+MCU8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiYmFyIHt7IHN0YXR1c2VzWzBdID8gc3RhdHVzZXNbMF0gOiAnJyB9fVwiPjwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJzdGF0dXMtdGV4dFwiPlxuICAgICAgPHNwYW4gY2xhc3M9XCJzdGF0dXNcIj5TZW50PC9zcGFuPjxzcGFuIGNsYXNzPVwiZGF0ZVwiPnt7IGRhdGUgfX08L3NwYW4+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuICA8ZGl2IGNsYXNzPVwiaXRlbVwiPlxuICAgIDxkaXYgY2xhc3M9XCJwZXJjZW50YWdlXCI+PC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cImJhciB7eyBzdGF0dXNlc1sxXSA/IHN0YXR1c2VzWzFdIDogJycgfX1cIj48L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwic3RhdHVzLXRleHRcIj5cbiAgICAgIDxzcGFuIGNsYXNzPVwic3RhdHVzXCI+QWNrbm93bGVkZ2VkPC9zcGFuXG4gICAgICA+PHNwYW4gY2xhc3M9XCJkYXRlXCI+e3sgZGF0ZSB9fTwvc3Bhbj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9XCJpdGVtXCI+XG4gICAgPGRpdiBjbGFzcz1cInBlcmNlbnRhZ2UgZC1mbGV4IGp1c3RpZnktY29udGVudC1jZW50ZXIgZmxhZ3RleHRcIj5cbiAgICAgIDxpbWcgc3JjPVwiLi9hc3NldHMvaWNvbnMvZmxhZzIuc3ZnXCIgYWx0PVwiRmxhZ1wiIHdpZHRoPVwiMjBcIiAvPjxzcGFuPnt7XG4gICAgICAgIGRhdGVcbiAgICAgIH19PC9zcGFuPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJiYXIge3sgc3RhdHVzZXNbMl0gPyBzdGF0dXNlc1syXSA6ICcnIH19XCI+PC9kaXY+XG4gICAgPGRpdiBjbGFzcz1cInN0YXR1cy10ZXh0XCI+XG4gICAgICA8c3BhbiBjbGFzcz1cInN0YXR1c1wiPkluIFByb2dyZXNzPC9zcGFuXG4gICAgICA+PHNwYW4gY2xhc3M9XCJkYXRlXCI+e3sgZGF0ZSB9fTwvc3Bhbj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9XCJpdGVtXCI+XG4gICAgPGRpdiBjbGFzcz1cInBlcmNlbnRhZ2VcIj48L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiYmFyIHt7IHN0YXR1c2VzWzNdID8gc3RhdHVzZXNbM10gOiAnJyB9fVwiPjwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJzdGF0dXMtdGV4dFwiPlxuICAgICAgPHNwYW4gY2xhc3M9XCJzdGF0dXNcIj5Db25maXJtZWQ8L3NwYW4+PHNwYW4gY2xhc3M9XCJkYXRlXCI+e3sgZGF0ZSB9fTwvc3Bhbj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9XCJpdGVtXCI+XG4gICAgPGRpdiBjbGFzcz1cInBlcmNlbnRhZ2VcIj48L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiYmFyIHt7IHN0YXR1c2VzWzRdID8gc3RhdHVzZXNbNF0gOiAnJyB9fVwiPjwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJzdGF0dXMtdGV4dFwiPlxuICAgICAgPHNwYW4gY2xhc3M9XCJzdGF0dXNcIj5EZWxpdmVyZWQ8L3NwYW4+PHNwYW4gY2xhc3M9XCJkYXRlXCI+e3sgZGF0ZSB9fTwvc3Bhbj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9XCJpdGVtXCI+XG4gICAgPGRpdiBjbGFzcz1cInBlcmNlbnRhZ2UgZC1mbGV4IGp1c3RpZnktY29udGVudC1lbmQgZmxhZ2xhdGVcIj5cbiAgICAgIDxsYWJlbCBjbGFzcz1cImNoZWNrYm94LWJveCBtcjNcIlxuICAgICAgICA+RmxhZyBhcyBMYXRlXG4gICAgICAgIDxpbnB1dCB0eXBlPVwiY2hlY2tib3hcIiAvPlxuICAgICAgICA8c3BhbiBjbGFzcz1cImNoZWNrbWFya1wiPjwvc3Bhbj4gPC9sYWJlbFxuICAgICAgPjEwMCVcbiAgICA8L2Rpdj5cbiAgICA8ZGl2IGNsYXNzPVwiYmFyIHt7IHN0YXR1c2VzWzVdID8gc3RhdHVzZXNbNV0gOiAnJyB9fVwiPjwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJzdGF0dXMtdGV4dCB0ZXh0LXJpZ2h0XCI+XG4gICAgICA8c3BhbiBjbGFzcz1cInN0YXR1c1wiPkNvbXBsZXRlZDwvc3Bhbj48c3BhbiBjbGFzcz1cImRhdGVcIj57eyBkYXRlIH19PC9zcGFuPlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbiAgPGRpdlxuICAgICpuZ0lmPVwicGVyY2VudGFnZSAhPSAnJ1wiXG4gICAgY2xhc3M9XCJjaXJjdWxhci1pbmRpY2F0b3JcIlxuICAgIFtzdHlsZS5sZWZ0XT1cInBlcmNlbnRhZ2VcIlxuICA+XG4gICAgPHNwYW4gY2xhc3M9XCJwZXJjLXZhbHVlXCI+e3sgcGVyY2VudGFnZSB9fTwvc3Bhbj5cbiAgICA8c3BhbiBjbGFzcz1cImNpcmNsZVwiPjwvc3Bhbj5cbiAgPC9kaXY+XG48L2Rpdj5cbiJdfQ==