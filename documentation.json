{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-dcc5c3137cd472dd0002d85b562efd23162e3eff53ca4438a6251e6c46e3b8299076255380d1d42f386510cb6f2cbaab49fa5b5f253be459cdc3869428c5c400",
            "file": "stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "PatternLibService",
            "id": "injectable-PatternLibService-d347fbf48dc39e386eea91338aa90165c047612f2b518757cd681ad5f11ff5c48312b06e6aca2cd3da100a0d9d91bc99c36e079710b5790dad93dce572750955",
            "file": "projects/pattern-lib/src/lib/pattern-lib.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PatternLibService {\r\n\r\n  constructor() { }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "DealsCard",
            "id": "class-DealsCard-e856ab07fd359f153da874efd0467b30a0ad0d7916983979c58aeceeb9df4647a1ee26c3fd17bba7601ef4e7e427fa577b623d83b889f995251bc977cf7b0016",
            "file": "projects/pattern-lib/src/models/deals-card.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class DealsCard {\r\n    title: string;\r\n    status: string;\r\n    address: string;\r\n    category?: string;\r\n    speed?: string;\r\n    amount: string;\r\n    mrc?: string;\r\n    nrc?: string;\r\n    providers_count: number;\r\n    nearby_companies?: number;\r\n    customer: string;\r\n    multi_location: boolean;\r\n    locations?: number;\r\n}",
            "properties": [
                {
                    "name": "address",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "category",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "customer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "locations",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "mrc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "multi_location",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "nearby_companies",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "nrc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "providers_count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "speed",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Form",
            "id": "class-Form-55eed298c0d7657a944d79dd39e6404a2fba037f5e29051da42757d3fbe8cc82fa27d8801497e2dd28d7c604294e7cbcc49dd9fb5d4ad552ff153069225ddbd3",
            "file": "projects/pattern-lib/src/models/form.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class Form {\r\n    label: string;\r\n}",
            "properties": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "KeyValue",
            "id": "class-KeyValue-67f03852cf119a47c045d1a40427a99ab3b6bc40b11739887e802362d2713a9b5f7ec9c5964cd3d3291ff2ce987966db5c1ebf36efe47291d8949815bdcc6a8a",
            "file": "projects/pattern-lib/src/models/key-value.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class KeyValue {\r\n    key: string;\r\n    value: string;\r\n}",
            "properties": [
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Sidebar",
            "id": "class-Sidebar-b4c8d3a6cc9c79b38d912377949275fc1142a5c97113d4cf5ba7cb1da5061fc28b1762d1daf6661929439c2121b0d8e16206cd91c8910eda57b75e8797ed2a36",
            "file": "projects/pattern-lib/src/models/sidebar.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class Sidebar {\r\n    label: string;\r\n    img: string;\r\n    active: boolean;\r\n    routerLink?: string;\r\n}",
            "properties": [
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "img",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "routerLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "Sort",
            "id": "class-Sort-e6b6b78f47bd1c74ff8a578090ff4c111ec0d4b2502d24423859bbe72bb8c8469931f5e5c56305603637f75beccc7db2a3e0b972f3308a4be07a97ddaf916565",
            "file": "projects/pattern-lib/src/models/sort.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class Sort {\r\n    column: string;\r\n    direction: number;\r\n}",
            "properties": [
                {
                    "name": "column",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "direction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "TableAction",
            "id": "class-TableAction-1b79c1f3a2274a6aac1c63bd96748d423163dbeb797f506b34e508ae9f5192713fe862c55eb684aa6bd2c9193d590bfe60354b0053db56816603af37384e604a",
            "file": "projects/pattern-lib/src/models/table-action.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class TableAction {\r\n    label: string;\r\n    img?: string;\r\n    className: string;\r\n    isButton?: boolean;\r\n    isDropdown?: boolean;\r\n    value?: string\r\n}",
            "properties": [
                {
                    "name": "className",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "img",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "isButton",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "isDropdown",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "TableColumn",
            "id": "class-TableColumn-c45cbb04b1a73ab0d7112d7e325c74b292bedb97cad40afe2b746e0b112d7100e61cfa84dcd37ca8c68d956241d21e8827301636f93aa12baae9b14af984fe0e",
            "file": "projects/pattern-lib/src/models/table-column.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class TableColumn {\r\n  key: string;\r\n  showGear?: boolean;\r\n  label: string;\r\n  type: string;\r\n  className?: string;\r\n  sortable: boolean;\r\n  currencyType?: string;\r\n  status?: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "className",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "currencyType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "showGear",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "sortable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "ClickOutsideDirective",
            "id": "directive-ClickOutsideDirective-ca3adff9d1a7e26f903e2cb498e11414dc7590a8301b10153ee3f8431452effd9a2edab6e6326c89c878c089e340ef99e765461f894c8831a88da6489070b7ce",
            "file": "projects/pattern-lib/src/lib/directives/click-outside.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, EventEmitter, HostListener, Output } from \"@angular/core\";\r\n\r\n@Directive({\r\n    selector: '[clickOutside]'\r\n})\r\nexport class ClickOutsideDirective {\r\n\r\n    constructor(private elementRef: ElementRef) { }\r\n\r\n    @Output() clickOutside = new EventEmitter<MouseEvent>();\r\n\r\n    @HostListener('document:click', ['$event', '$event.target'])\r\n    public onClick(event: MouseEvent, targetElement: HTMLElement): void {\r\n        if (!targetElement) {\r\n            return;\r\n        }\r\n        const clickedInside = this.elementRef.nativeElement.contains(targetElement);\r\n        if (!clickedInside) {\r\n            this.clickOutside.emit(event);\r\n        }\r\n    }\r\n}",
            "selector": "[clickOutside]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "clickOutside",
                    "defaultValue": "new EventEmitter<MouseEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "document:click",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "targetElement",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "argsDecorator": [
                        "$event",
                        "$event.target"
                    ],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "targetElement",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'document:click', ['$event', '$event.target']"
                        }
                    ],
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "targetElement",
                            "type": "HTMLElement",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AvatarComponent",
            "id": "component-AvatarComponent-8427f487b7a67ed1047c468b4bf06a6e083293810694340f9efd55fa6a90c67034f307fd514021a66ca184b847e5e14b96329b0a1d9b1e7dfa3d5d992ba15373",
            "file": "projects/pattern-lib/src/lib/avatar/avatar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cb-avatar",
            "styleUrls": [
                "./avatar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./avatar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "'JP'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'gold'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'cb-avatar',\r\n  templateUrl: './avatar.component.html',\r\n  styleUrls: ['./avatar.component.scss'],\r\n})\r\nexport class AvatarComponent {\r\n  @Input() type: string = 'gold';\r\n  @Input('label') label: string = 'JP';\r\n\r\n  constructor() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./avatar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "templateData": "<div class=\"avatar {{type}}\"><span>{{label}}</span></div>"
        },
        {
            "name": "BadgeComponent",
            "id": "component-BadgeComponent-c48802000b6908d34fa61986b91071a06c8869124f3b838f50516f56be623791eac849ff0c2f923d127efa73a0752ec7faec0318b485591ad5dee592819fa07f",
            "file": "projects/pattern-lib/src/lib/badge/badge.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cb-badge",
            "styleUrls": [
                "./badge.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./badge.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "'Pending'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'pending'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'cb-badge',\r\n  templateUrl: './badge.component.html',\r\n  styleUrls: ['./badge.component.scss'],\r\n})\r\nexport class BadgeComponent {\r\n  constructor() {}\r\n\r\n  @Input() type: string = 'pending';\r\n  @Input('label') label: string = 'Pending';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./badge.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "templateData": "<label class=\"badge {{type}}\">{{label}}</label>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-8ceaf520f96e5437b08eeda244d84efb29effe62ddca4fc38eaa229085c2a1126c5715e61445bae741505aca1e4d377b350cb05fadd1dc45d9b2bbf7527029f1",
            "file": "stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 747,
                            "end": 761,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 325,
                            "tagName": {
                                "pos": 748,
                                "end": 756,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'storybook-button',\r\n  template: ` <button\r\n    type=\"button\"\r\n    (click)=\"onClick.emit($event)\"\r\n    [ngClass]=\"classes\"\r\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\r\n  >\r\n    {{ label }}\r\n  </button>`,\r\n  styleUrls: ['./button.css'],\r\n})\r\nexport default class ButtonComponent {\r\n  /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n  @Input()\r\n  primary = false;\r\n\r\n  /**\r\n   * What background color to use\r\n   */\r\n  @Input()\r\n  backgroundColor?: string;\r\n\r\n  /**\r\n   * How large should the button be?\r\n   */\r\n  @Input()\r\n  size: 'small' | 'medium' | 'large' = 'medium';\r\n\r\n  /**\r\n   * Button contents\r\n   *\r\n   * @required\r\n   */\r\n  @Input()\r\n  label = 'Button';\r\n\r\n  /**\r\n   * Optional click handler\r\n   */\r\n  @Output()\r\n  onClick = new EventEmitter<Event>();\r\n\r\n  public get classes(): string[] {\r\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\r\n\r\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\r\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\r\n  font-weight: 700;\r\n  border: 0;\r\n  border-radius: 3em;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  line-height: 1;\r\n}\r\n.storybook-button--primary {\r\n  color: white;\r\n  background-color: #1ea7fd;\r\n}\r\n.storybook-button--secondary {\r\n  color: #333;\r\n  background-color: transparent;\r\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\r\n}\r\n.storybook-button--small {\r\n  font-size: 12px;\r\n  padding: 10px 16px;\r\n}\r\n.storybook-button--medium {\r\n  font-size: 14px;\r\n  padding: 11px 20px;\r\n}\r\n.storybook-button--large {\r\n  font-size: 16px;\r\n  padding: 12px 24px;\r\n}\r\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-2b8a39127299bdb85b4e4bd10e4df11f98491f3f5095a06a542a97379da1e19659bb394e759ffa3eefc986e5e3386bab03efec5b5d13036a55253bc415bfcfcd-1",
            "file": "projects/pattern-lib/src/lib/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cb-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "btnLink",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "className",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "img",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "\"small\" | \"medium\" | \"large\" | string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'cb-button',\r\n  templateUrl: './button.component.html',\r\n  styleUrls: ['./button.component.scss']\r\n})\r\nexport class ButtonComponent {\r\n\r\n  constructor() { }\r\n\r\n  @Input('icon') icon: boolean = false;\r\n  @Input('btnLink') btnLink: string = '';\r\n  @Input('img') img: string = '';\r\n  @Input('className') className: string = '';\r\n  @Input('size') size: 'small' | 'medium' | 'large' | '' = '';\r\n  @Input('label') label: string = '';\r\n  @Input('disabled') disabled: boolean = false;\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ButtonComponent-1",
            "templateData": "<button\r\n  *ngIf=\"btnLink != ''\"\r\n  class=\"{{ className }} {{ size }}\"\r\n  [attr.disabled]=\"disabled ? 'disabled' : null\"\r\n  [routerLink]=\"btnLink\"\r\n>\r\n  <ng-container *ngIf=\"!icon\">{{ label }}</ng-container>\r\n  <ng-container *ngIf=\"icon\"><img src=\"{{ img }}\" alt=\"button\" /></ng-container>\r\n</button>\r\n\r\n<button\r\n  *ngIf=\"btnLink == ''\"\r\n  class=\"{{ className }} {{ size }}\"\r\n  [attr.disabled]=\"disabled ? 'disabled' : null\"\r\n>\r\n  <ng-container *ngIf=\"!icon\">{{ label }}</ng-container>\r\n  <ng-container *ngIf=\"icon\"><img src=\"{{ img }}\" alt=\"button\" /></ng-container>\r\n</button>\r\n"
        },
        {
            "name": "DatatableComponent",
            "id": "component-DatatableComponent-2c57707b34b1014143ca08db9b6820a9c0df9a8772cb63760c30a45ecc1f60656095e316f2259357f1d7b3fca252bd8e9bc0d6692a141b0b53a9ce0fe38fc9e7",
            "file": "projects/pattern-lib/src/lib/datatable/datatable.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cb-datatable",
            "styleUrls": [
                "./datatable.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./datatable.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "columns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "headerBgColor",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "rows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "searchable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cloneRows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "searchKey",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSearch",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'cb-datatable',\r\n  templateUrl: './datatable.component.html',\r\n  styleUrls: ['./datatable.component.scss']\r\n})\r\nexport class DatatableComponent implements OnInit {\r\n  cloneRows: any;\r\n  searchKey: string = '';\r\n  @Input('headerBgColor') headerBgColor: string = '';\r\n  @Input('searchable') searchable: boolean = false;\r\n  @Input('columns') columns: any[];\r\n  @Input('rows') rows: any[];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.cloneRows = this.rows;\r\n  }\r\n\r\n  onSearch() {\r\n    var searchKey = this.searchKey.toLocaleLowerCase('en-US');\r\n    this.cloneRows = this.rows.filter((val: any) => {\r\n      let rVal = false;\r\n      this.columns.forEach(element => {\r\n        let value = val[element].toString();\r\n        value = value.toLocaleLowerCase('en-US');\r\n        if (value.includes(searchKey)) {\r\n            rVal = true;\r\n        }\r\n      });\r\n      return rVal;\r\n    })\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "table {\r\n    border-spacing: 0;\r\n    width: 100%;\r\n    background: #fff;\r\n    box-shadow: 0 5px 5px -3px rgb(0 0 0 / 20%), 0 8px 10px 1px rgb(0 0 0 / 14%), 0 3px 14px 2px rgb(0 0 0 / 12%);\r\n}\r\n\r\ntable thead {\r\n    background: inherit;\r\n    border-spacing: 0;\r\n    display: table-header-group;\r\n    vertical-align: middle;\r\n    border-color: inherit;\r\n}\r\n\r\nthead tr {\r\n    height: 56px;\r\n    background: inherit;\r\n}\r\n\r\nthead th {\r\n    padding-left: 24px;\r\n    border-bottom-width: 1px;\r\n    border-bottom-style: solid;\r\n    text-align: left;\r\n    border-bottom-color: rgba(0,0,0,.12);\r\n    color: rgba(0,0,0,.54);\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n}\r\n\r\ntbody {\r\n    background: inherit;\r\n}\r\n\r\ntbody tr {\r\n    height: 48px;\r\n}\r\n\r\ntbody tr td {\r\n    padding-left: 24px;\r\n    border-bottom-width: 1px;\r\n    border-bottom-style: solid;\r\n    border-bottom-color: rgba(0,0,0,.12);\r\n    color: rgba(0,0,0,.87);\r\n    font-size: 14px;\r\n}\r\n\r\n.search input {\r\n    border-color: rgba(0,0,0,.12);\r\n    color: rgba(0,0,0,.54);\r\n    font-size: medium;\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n    height: 40px;\r\n    width: 300px;\r\n}\r\n\r\n.search label {\r\n    padding-right: 20px;\r\n}\r\n\r\n.footer {\r\n    height: 50px;\r\n    text-align: center;\r\n}\r\n\r\n.footer tr {\r\n    vertical-align: middle;\r\n}",
                    "styleUrl": "./datatable.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div *ngIf=\"searchable\" class=\"search\">\r\n  <label>Search</label>\r\n  <input\r\n    type=\"text\"\r\n    id=\"searchKey\"\r\n    name=\"searchKey\"\r\n    [(ngModel)]=\"searchKey\"\r\n    (keyup)=\"onSearch()\"\r\n    placeholder=\"type here to search...\"\r\n  />\r\n</div>\r\n<table>\r\n  <thead [style.background-color]=\"headerBgColor\">\r\n    <tr>\r\n      <th nowrap *ngFor=\"let column of columns\">\r\n        {{ column }}<i class=\"fa fa-chevron-up\"></i>\r\n      </th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let data of cloneRows\">\r\n      <td nowrap *ngFor=\"let column of columns\">{{ data[column] }}</td>\r\n    </tr>\r\n  </tbody>\r\n  <tfoot class=\"footer\" *ngIf=\"cloneRows.length == 0\">\r\n    <tr>\r\n      No records found!\r\n    </tr>\r\n  </tfoot>\r\n</table>\r\n"
        },
        {
            "name": "DealsCardComponent",
            "id": "component-DealsCardComponent-3541f3c7a3cef7df823468e4ea6cba172c62c3e076d97086c63a129d4fc8f8d4d11b2d64543412142228264a8c8ce6ac33e0ad6239b3047b3a2788fdc4ba286d",
            "file": "projects/pattern-lib/src/lib/deals-card/deals-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cb-deals-card",
            "styleUrls": [
                "./deals-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./deals-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "card",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "DealsCard",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit } from '@angular/core';\r\nimport { DealsCard } from '../../models/deals-card';\r\n\r\n@Component({\r\n  selector: 'cb-deals-card',\r\n  templateUrl: './deals-card.component.html',\r\n  styleUrls: ['./deals-card.component.scss']\r\n})\r\nexport class DealsCardComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  @Input('card') card: DealsCard;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./deals-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"list-card\">\r\n  <div class=\"header\">\r\n    <div class=\"d-flex justify-content-between mb2\">\r\n      <div class=\"title\">{{ card.title }}</div>\r\n      <div class=\"link\">\r\n        <a class=\"detaillink\">Full Details</a>\r\n      </div>\r\n    </div>\r\n    <label class=\"badge {{ card.status }}\">{{ card.status | titlecase }}</label>\r\n  </div>\r\n  <div class=\"line\"><span class=\"{{ card.status }}\"></span></div>\r\n  <div class=\"content\" *ngIf=\"!card.multi_location\">\r\n    <div class=\"locations\">\r\n      <div class=\"title\">Location</div>\r\n      <div class=\"details\">{{ card.address }}</div>\r\n    </div>\r\n    <div class=\"type_speed\">\r\n      <span class=\"type\">{{ card.category }}</span>\r\n      <img src=\"./assets/icons/speed/1g.svg\" />\r\n      <span class=\"speed\">{{ card.speed }}</span>\r\n    </div>\r\n    <div class=\"amount\">\r\n      <span class=\"title\">{{ card.amount }}</span>\r\n      <span class=\"mr2\">MRC&nbsp;{{ card.mrc }}</span>\r\n      <span>NRC&nbsp;{{ card.nrc }}</span>\r\n    </div>\r\n    <hr />\r\n    <ul class=\"highlites\">\r\n      <li>\r\n        <div class=\"icon-box\">\r\n          <img src=\"./assets/icons/star.svg\" />\r\n        </div>\r\n        <div class=\"content-box\">\r\n          <span>High Competition</span>\r\n          <a>{{ card.providers_count }} Providers</a>\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div class=\"icon-box\">\r\n          <img src=\"./assets/icons/badge.svg\" />\r\n        </div>\r\n        <div class=\"content-box\">\r\n          <span>Potential Nearby</span>\r\n          <a>{{ card.nearby_companies }} Companies nearby</a>\r\n        </div>\r\n      </li>\r\n      <li>\r\n        <div class=\"icon-box\">\r\n          <img src=\"./assets/icons/customer.svg\" />\r\n        </div>\r\n        <div class=\"content-box\">\r\n          <span>Customer</span>\r\n          <a>{{ card.customer }}</a>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"content\" *ngIf=\"card.multi_location\">\r\n    <div class=\"locations\">\r\n      <div class=\"title\">{{ card.locations }} Locations</div>\r\n    </div>\r\n    <div class=\"amount\">\r\n      <span class=\"title\">{{ card.amount }}</span>\r\n    </div>\r\n    <div class=\"potential\">\r\n      <img src=\"./assets/icons/badge.svg\" />\r\n      <div class=\"detail\">\r\n        <label>Customer</label>\r\n        <a>{{ card.customer }}</a>\r\n      </div>\r\n    </div>\r\n    <ul class=\"highlites\">\r\n      <li>\r\n        <div class=\"content-box\">\r\n          <a>{{ card.providers_count }} Your Company can provide</a>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"actions\">\r\n    <button>\r\n      <svg\r\n        width=\"16\"\r\n        height=\"16\"\r\n        viewBox=\"0 0 16 16\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M2.59037 13.4423L2.59044 13.4424C2.66665 13.5057 2.77314 13.5179 2.86182 13.4736L13.3618 8.22361C13.3618 8.22361 13.3618 8.22361 13.3618 8.22361C13.4465 8.18125 13.5 8.09468 13.5 8.00001C13.5 7.90532 13.4465 7.81879 13.3618 7.77642C13.3618 7.77642 13.3618 7.77642 13.3618 7.77642L2.86182 2.52643L2.86177 2.52641C2.7731 2.48206 2.66666 2.49433 2.59047 2.55759L2.59033 2.5577C2.51408 2.62096 2.48242 2.72334 2.50965 2.81861L2.50967 2.81869L3.58103 6.56863C3.61172 6.676 3.70986 6.75001 3.82148 6.75001L7.25002 6.75001C7.94039 6.75001 8.50002 7.30964 8.50002 8.00001C8.50002 8.69035 7.94039 9.25001 7.25002 9.25001H3.82148C3.70984 9.25001 3.61171 9.32401 3.58103 9.43137L2.50967 13.1813L2.50965 13.1814C2.48242 13.2766 2.51406 13.379 2.59037 13.4423Z\"\r\n          fill=\"#005EB8\"\r\n          stroke=\"#005EB8\"\r\n        />\r\n      </svg>\r\n    </button>\r\n    <button>\r\n      <svg\r\n        width=\"16\"\r\n        height=\"16\"\r\n        viewBox=\"0 0 16 16\"\r\n        fill=\"none\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          d=\"M4.56667 7.80004C4.56667 7.22932 4.10404 6.7667 3.53334 6.7667C2.96263 6.7667 2.5 7.22932 2.5 7.80004C2.5 8.37073 2.96264 8.83337 3.53334 8.83337C4.10403 8.83337 4.56667 8.37073 4.56667 7.80004ZM9.16668 7.80004C9.16668 7.22932 8.70406 6.7667 8.13334 6.7667C7.56264 6.7667 7.10001 7.22932 7.10001 7.80004C7.10001 8.37073 7.56265 8.83337 8.13334 8.83337C8.70405 8.83337 9.16668 8.37074 9.16668 7.80004ZM13.7667 7.80004C13.7667 7.22932 13.3041 6.7667 12.7333 6.7667C12.1626 6.7667 11.7 7.22932 11.7 7.80004C11.7 8.37074 12.1626 8.83337 12.7333 8.83337C13.3041 8.83337 13.7667 8.37074 13.7667 7.80004Z\"\r\n          fill=\"#66757E\"\r\n          stroke=\"#66757E\"\r\n        />\r\n      </svg>\r\n    </button>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "DropdownComponent",
            "id": "component-DropdownComponent-d67077d7f08b2753ade7e0dce03c98d9ad77cd78df5418e438bfbcb0cf76ce5e4e8455ec8d7282c003589d6f227f81c4bd8e8f4ffc941558808087234cf50098",
            "file": "projects/pattern-lib/src/lib/dropdown/dropdown.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cb-dropdown",
            "styleUrls": [
                "./dropdown.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dropdown.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "custom",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "KeyValue[]",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "'normal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "currentValueChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "currentIndex",
                    "defaultValue": "-1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "currentValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "KeyValue",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dropdownOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "closeDropdown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleKeyboardEvents",
                    "args": [
                        {
                            "name": "$event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "out",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectByIndex",
                    "args": [
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleDropdown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter, ElementRef } from '@angular/core';\r\nimport { KeyValue } from '../../models/key-value';\r\n\r\n@Component({\r\n  selector: 'cb-dropdown',\r\n  templateUrl: './dropdown.component.html',\r\n  styleUrls: ['./dropdown.component.scss'],\r\n  host: {\r\n      '(document:keydown)': 'handleKeyboardEvents($event)'\r\n  }\r\n})\r\nexport class DropdownComponent {\r\n\r\n  @Input('type') type: string = 'normal';\r\n  @Input('disabled') disabled: boolean = false;\r\n  @Input('placeholder') placeholder: string = '';\r\n  @Input('custom') custom: boolean = false;\r\n  @Input('items') items: KeyValue[];\r\n  @Output() currentValueChange = new EventEmitter();\r\n\r\n  public currentValue: KeyValue;\r\n  public dropdownOpen: boolean = false;\r\n  public get dropdownElement(): Element {return this.elem.nativeElement.querySelector('.dropdown-list')}\r\n\r\n  private currentIndex = -1;\r\n\r\n  constructor(private elem: ElementRef) { }\r\n\r\n  ngOnInit(): void {\r\n    this.currentValue = {key: this.placeholder, value: ''};\r\n  }\r\n\r\n  handleKeyboardEvents($event: KeyboardEvent) {\r\n    if (this.dropdownOpen) {\r\n      $event.preventDefault();\r\n    } else {\r\n      return;\r\n    }\r\n    if ($event.code === 'ArrowUp') {\r\n      if (this.currentIndex < 0) {\r\n        this.currentIndex = 0;\r\n      } else if (this.currentIndex > 0) {\r\n        this.currentIndex--;\r\n      }\r\n      this.elem.nativeElement.querySelectorAll('li').item(this.currentIndex).focus();\r\n    } else if ($event.code === 'ArrowDown') {\r\n      if (this.currentIndex < 0) {\r\n        this.currentIndex = 0;\r\n      } else if (this.currentIndex < this.items.length-1) {\r\n        this.currentIndex++;\r\n      }\r\n      this.elem.nativeElement.querySelectorAll('li').item(this.currentIndex).focus();\r\n    } else if (($event.code === 'Enter' || $event.code === 'NumpadEnter') && this.currentIndex >= 0) {\r\n      this.selectByIndex(this.currentIndex);\r\n    } else if ($event.code === 'Escape') {\r\n      this.closeDropdown();\r\n    }\r\n  }\r\n\r\n  closeDropdown() {\r\n    this.dropdownElement.setAttribute('aria-expanded', \"false\");\r\n    this.currentIndex = -1;\r\n    this.dropdownOpen = false;\r\n  }\r\n\r\n  selectByIndex(i: number) {\r\n    let value = this.items[i];\r\n    this.select(value);\r\n  }\r\n\r\n  select(value: any) {\r\n    this.currentValue = value;\r\n    this.closeDropdown();\r\n    this.currentValueChange.emit(this.currentValue);\r\n  }\r\n\r\n  out() {\r\n    debugger\r\n  }\r\n\r\n  toggleDropdown() {\r\n    this.dropdownOpen = !this.dropdownOpen;\r\n    this.dropdownElement.setAttribute('aria-expanded', this.dropdownOpen ? \"true\" : \"false\");\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dropdown.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elem",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 25,
                "jsdoctags": [
                    {
                        "name": "elem",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "dropdownElement": {
                    "name": "dropdownElement",
                    "getSignature": {
                        "name": "dropdownElement",
                        "type": "",
                        "returnType": "Element",
                        "line": 23
                    }
                }
            },
            "templateData": "<div class=\"select {{ type }}\" *ngIf=\"!custom\">\r\n  <select [attr.disabled]=\"disabled ? 'disabled' : null\">\r\n    <option *ngIf=\"placeholder !== ''\" value=\"\">{{ placeholder }}</option>\r\n    <option [value]=\"item.value\" *ngFor=\"let item of items\">\r\n      {{ item.key }}\r\n    </option>\r\n  </select>\r\n</div>\r\n\r\n<div class=\"customdropdown {{ type }}\" *ngIf=\"custom\">\r\n  <button\r\n    class=\"dropdown\"\r\n    aria-haspopup=\"listbox\"\r\n    aria-labelledby=\"dropdown-label\"\r\n    (click)=\"toggleDropdown()\"\r\n    (clickOutside)=\"dropdownOpen = false\"\r\n  >\r\n    {{ currentValue.key }}\r\n  </button>\r\n  <ul\r\n    class=\"dropdown-list\"\r\n    role=\"listbox\"\r\n    aria-expanded=\"false\"\r\n    [ngClass]=\"{ 'dropdown-open': dropdownOpen }\"\r\n  >\r\n    <li\r\n      *ngFor=\"let o of items\"\r\n      [ngClass]=\"{ selected: currentValue === o }\"\r\n      tabindex=\"0\"\r\n      (click)=\"select(o)\"\r\n      role=\"option\"\r\n      [innerHTML]=\"o.key\"\r\n    ></li>\r\n  </ul>\r\n</div>\r\n"
        },
        {
            "name": "DropdownExpandedComponent",
            "id": "component-DropdownExpandedComponent-f29c66d5c1e4998ec4d7018d20a02404a69aee616c24886f00503957dc916a59db1c377ca7d83f0af64dc243d1804ddc5bf4966581b78975cb18d4b6ba5b1784",
            "file": "projects/pattern-lib/src/lib/dropdown-expanded/dropdown-expanded.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cb-dropdown-expanded",
            "styleUrls": [
                "./dropdown-expanded.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dropdown-expanded.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'cb-dropdown-expanded',\r\n  templateUrl: './dropdown-expanded.component.html',\r\n  styleUrls: ['./dropdown-expanded.component.scss']\r\n})\r\nexport class DropdownExpandedComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dropdown-expanded.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>dropdown-expanded works!</p>\r\n"
        },
        {
            "name": "DropdownStatusComponent",
            "id": "component-DropdownStatusComponent-76f654a5699a6583c50e7bee62de68620c955d1e3034256c85e8b8e57b1a01fbf30ad490392d7e9380eaf2ca43dcc1cf5d08f967e70e6c697b29db19d4caa86b",
            "file": "projects/pattern-lib/src/lib/dropdown-status/dropdown-status.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cb-dropdown-status",
            "styleUrls": [
                "./dropdown-status.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./dropdown-status.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "status",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "statusClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "currentValueChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "currentIndex",
                    "defaultValue": "-1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "currentValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "KeyValue",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dropdownOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "closeDropdown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleKeyboardEvents",
                    "args": [
                        {
                            "name": "$event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "out",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "selectByIndex",
                    "args": [
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleDropdown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 92,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  Output,\r\n} from '@angular/core';\r\nimport { KeyValue } from '../../models/key-value';\r\n\r\n@Component({\r\n  selector: 'cb-dropdown-status',\r\n  templateUrl: './dropdown-status.component.html',\r\n  styleUrls: ['./dropdown-status.component.scss'],\r\n  host: {\r\n    '(document:keydown)': 'handleKeyboardEvents($event)',\r\n  },\r\n})\r\nexport class DropdownStatusComponent {\r\n  @Input('status') status: string = '';\r\n  @Input('statusClass') statusClass: string = '';\r\n  @Input('items') items: any = [];\r\n\r\n  @Output() currentValueChange = new EventEmitter();\r\n\r\n  public currentValue: KeyValue;\r\n  public dropdownOpen: boolean = false;\r\n  public get dropdownElement(): Element {\r\n    return this.elem.nativeElement.querySelector('.dropdown-list');\r\n  }\r\n\r\n  private currentIndex = -1;\r\n\r\n  constructor(private elem: ElementRef) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  handleKeyboardEvents($event: KeyboardEvent) {\r\n    if (this.dropdownOpen) {\r\n      $event.preventDefault();\r\n    } else {\r\n      return;\r\n    }\r\n    if ($event.code === 'ArrowUp') {\r\n      if (this.currentIndex < 0) {\r\n        this.currentIndex = 0;\r\n      } else if (this.currentIndex > 0) {\r\n        this.currentIndex--;\r\n      }\r\n      this.elem.nativeElement\r\n        .querySelectorAll('li')\r\n        .item(this.currentIndex)\r\n        .focus();\r\n    } else if ($event.code === 'ArrowDown') {\r\n      if (this.currentIndex < 0) {\r\n        this.currentIndex = 0;\r\n      } else if (this.currentIndex < this.items.length - 1) {\r\n        this.currentIndex++;\r\n      }\r\n      this.elem.nativeElement\r\n        .querySelectorAll('li')\r\n        .item(this.currentIndex)\r\n        .focus();\r\n    } else if (\r\n      ($event.code === 'Enter' || $event.code === 'NumpadEnter') &&\r\n      this.currentIndex >= 0\r\n    ) {\r\n      this.selectByIndex(this.currentIndex);\r\n    } else if ($event.code === 'Escape') {\r\n      this.closeDropdown();\r\n    }\r\n  }\r\n\r\n  closeDropdown() {\r\n    this.dropdownElement.setAttribute('aria-expanded', 'false');\r\n    this.currentIndex = -1;\r\n    this.dropdownOpen = false;\r\n  }\r\n\r\n  selectByIndex(i: number) {\r\n    let value = this.items[i];\r\n    this.select(value);\r\n  }\r\n\r\n  select(value: any) {\r\n    this.currentValue = value;\r\n    this.closeDropdown();\r\n    this.currentValueChange.emit(this.currentValue);\r\n  }\r\n\r\n  out() {}\r\n\r\n  toggleDropdown() {\r\n    this.dropdownOpen = !this.dropdownOpen;\r\n    this.dropdownElement.setAttribute(\r\n      'aria-expanded',\r\n      this.dropdownOpen ? 'true' : 'false'\r\n    );\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./dropdown-status.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elem",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 31,
                "jsdoctags": [
                    {
                        "name": "elem",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "dropdownElement": {
                    "name": "dropdownElement",
                    "getSignature": {
                        "name": "dropdownElement",
                        "type": "",
                        "returnType": "Element",
                        "line": 27
                    }
                }
            },
            "templateData": "<div class=\"customdropdown status-dropdown {{ statusClass }}\">\r\n  <div class=\"dropdown\" aria-haspopup=\"listbox\" aria-labelledby=\"dropdown-label\" (click)=\"toggleDropdown()\"\r\n    (clickOutside)=\"dropdownOpen = false\">\r\n    {{ status }}\r\n  </div>\r\n  <ul class=\"dropdown-list\" aria-expanded=\"false\" [ngClass]=\"{ 'dropdown-open': dropdownOpen }\">\r\n    <li *ngFor=\"let item of items\" (click)=\"select(item)\">{{ item }}\r\n    </li>\r\n  </ul>\r\n</div>"
        },
        {
            "name": "FormComponent",
            "id": "component-FormComponent-b00395bd0ff6d6e898e812a6f038332f7dd01d76ec084fd0c0371b878bcd109f3d34c0f4b19a8fe2df37b6e029dc99b8f852ca38e1c8962bb5f61de82b59a94d",
            "file": "projects/pattern-lib/src/lib/form/form.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cb-form",
            "styleUrls": [
                "./form.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./form.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Form[]",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { Form } from '../../models/form';\r\n\r\n@Component({\r\n  selector: 'cb-form',\r\n  templateUrl: './form.component.html',\r\n  styleUrls: ['./form.component.scss']\r\n})\r\nexport class FormComponent {\r\n\r\n  constructor() { }\r\n  @Input('type') type: string = '';\r\n  @Input('items') items: Form[];\r\n  \r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./form.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "templateData": "<div *ngFor=\"let item of items\">\r\n    <label class=\"{{type}}-box\">{{item.label}}\r\n        <input type=\"{{type}}\" [attr.checked]=\"type == 'checkbox'\" [attr.name]=\"type == 'radio'\">\r\n        <span class=\"checkmark\"></span>\r\n    </label>\r\n</div>\r\n"
        },
        {
            "name": "PatternLibComponent",
            "id": "component-PatternLibComponent-31f579b1a86d20f321f025779ef0a72bd152433af24220da0894c10907b1456afd1e69498bd9ba87ded3d7d8d5ee8b7bedc7932fb6a567f9ea74f492607f578f",
            "file": "projects/pattern-lib/src/lib/pattern-lib.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cb-pattern-lib",
            "styleUrls": [],
            "styles": [],
            "template": "<p>\n  pattern-lib works!\n</p>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'cb-pattern-lib',\r\n  template: `\r\n    <p>\r\n      pattern-lib works!\r\n    </p>\r\n  `,\r\n  styles: [\r\n  ]\r\n})\r\nexport class PatternLibComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 13
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "ProgressBarComponent",
            "id": "component-ProgressBarComponent-170d0b9a23d44faa37d4f75a97a57d07ae0fb2efd6ebb58576cbb5e5dec1d682c39ba9c3e809601b2b6c452ff57b4619bed17b35af696dde0b742475407b84ef",
            "file": "projects/pattern-lib/src/lib/progress-bar/progress-bar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cb-progress-bar",
            "styleUrls": [
                "./progress-bar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./progress-bar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "date",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "percentage",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "statuses",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "any",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'cb-progress-bar',\r\n  templateUrl: './progress-bar.component.html',\r\n  styleUrls: ['./progress-bar.component.scss'],\r\n})\r\nexport class ProgressBarComponent {\r\n  @Input('date') date: string = '';\r\n  @Input('percentage') percentage: string = '';\r\n  @Input('statuses') statuses: any = [];\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./progress-bar.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"progress-indicator mt8\">\r\n  <div class=\"item\">\r\n    <div class=\"percentage d-flex justify-content-start\">0%</div>\r\n    <div class=\"bar {{ statuses[0] ? statuses[0] : '' }}\"></div>\r\n    <div class=\"status-text\">\r\n      <span class=\"status\">Sent</span><span class=\"date\">{{ date }}</span>\r\n    </div>\r\n  </div>\r\n  <div class=\"item\">\r\n    <div class=\"percentage\"></div>\r\n    <div class=\"bar {{ statuses[1] ? statuses[1] : '' }}\"></div>\r\n    <div class=\"status-text\">\r\n      <span class=\"status\">Acknowledged</span\r\n      ><span class=\"date\">{{ date }}</span>\r\n    </div>\r\n  </div>\r\n  <div class=\"item\">\r\n    <div class=\"percentage d-flex justify-content-center flagtext\">\r\n      <img src=\"./assets/icons/flag2.svg\" alt=\"Flag\" width=\"20\" /><span>{{\r\n        date\r\n      }}</span>\r\n    </div>\r\n    <div class=\"bar {{ statuses[2] ? statuses[2] : '' }}\"></div>\r\n    <div class=\"status-text\">\r\n      <span class=\"status\">In Progress</span\r\n      ><span class=\"date\">{{ date }}</span>\r\n    </div>\r\n  </div>\r\n  <div class=\"item\">\r\n    <div class=\"percentage\"></div>\r\n    <div class=\"bar {{ statuses[3] ? statuses[3] : '' }}\"></div>\r\n    <div class=\"status-text\">\r\n      <span class=\"status\">Confirmed</span><span class=\"date\">{{ date }}</span>\r\n    </div>\r\n  </div>\r\n  <div class=\"item\">\r\n    <div class=\"percentage\"></div>\r\n    <div class=\"bar {{ statuses[4] ? statuses[4] : '' }}\"></div>\r\n    <div class=\"status-text\">\r\n      <span class=\"status\">Delivered</span><span class=\"date\">{{ date }}</span>\r\n    </div>\r\n  </div>\r\n  <div class=\"item\">\r\n    <div class=\"percentage d-flex justify-content-end flaglate\">\r\n      <label class=\"checkbox-box mr3\"\r\n        >Flag as Late\r\n        <input type=\"checkbox\" />\r\n        <span class=\"checkmark\"></span> </label\r\n      >100%\r\n    </div>\r\n    <div class=\"bar {{ statuses[5] ? statuses[5] : '' }}\"></div>\r\n    <div class=\"status-text text-right\">\r\n      <span class=\"status\">Completed</span><span class=\"date\">{{ date }}</span>\r\n    </div>\r\n  </div>\r\n  <div\r\n    *ngIf=\"percentage != ''\"\r\n    class=\"circular-indicator\"\r\n    [style.left]=\"percentage\"\r\n  >\r\n    <span class=\"perc-value\">{{ percentage }}</span>\r\n    <span class=\"circle\"></span>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "SearchInputComponent",
            "id": "component-SearchInputComponent-5fed8e3f9b26a683158d76b956d4e6ba36c32067edbf73df9bc5e990e8effb573526395f5e742ea0aa61750af0eed8a69ea102343ef20aac3aa27618a6000f5e",
            "file": "projects/pattern-lib/src/lib/search-input/search-input.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cb-search-input",
            "styleUrls": [
                "./search-input.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./search-input.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "placeholder",
                    "defaultValue": "'Type here...'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "shape",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'large'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'cb-search-input',\r\n  templateUrl: './search-input.component.html',\r\n  styleUrls: ['./search-input.component.scss']\r\n})\r\nexport class SearchInputComponent {\r\n\r\n  constructor() { }\r\n\r\n  @Input('size') size: string = 'large';\r\n  @Input('shape') shape: string = '';\r\n  @Input('placeholder') placeholder: string = 'Type here...';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./search-input.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "templateData": "<input type=\"text\" class=\"formInputText {{size}} {{shape}}\" placeholder=\"{{placeholder}}\"/>"
        },
        {
            "name": "SidebarComponent",
            "id": "component-SidebarComponent-2759d48d145f2ff91fa914bf1c9d7b804c1782a80b3220352a3015a610c902d4469f98771e4e984b669e496b1c36e3becd06818dc96397e75c339614c8f03262",
            "file": "projects/pattern-lib/src/lib/sidebar/sidebar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cb-sidebar",
            "styleUrls": [
                "./sidebar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./sidebar.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Sidebar[]",
                    "decorators": []
                },
                {
                    "name": "settingsLink",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { Sidebar } from '../../models/sidebar';\r\n\r\n@Component({\r\n  selector: 'cb-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.scss']\r\n})\r\nexport class SidebarComponent {\r\n\r\n  constructor() { }\r\n\r\n  @Input('items') items: Sidebar[];\r\n  @Input('settingsLink') settingsLink: string;\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./sidebar.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "templateData": "<nav class=\"sidebar\">\r\n  <div class=\"top\">\r\n    <a href=\"#\" class=\"logo\">\r\n      <img src=\"./assets/icons/nav-bar/logo.svg\" alt=\"Logo\" />\r\n    </a>\r\n    <ul>\r\n      <li\r\n        *ngFor=\"let item of items\"\r\n        [routerLink]=\"item.routerLink\"\r\n        [routerLinkActive]=\"'active'\"\r\n      >\r\n        <a>\r\n          <img src=\"{{ item.img }}\" alt=\"Logo\" />\r\n          <span>{{ item.label }}</span>\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div class=\"bottom\">\r\n    <ul>\r\n      <li [routerLink]=\"settingsLink\" [routerLinkActive]=\"'active'\">\r\n        <a>\r\n          <img src=\"./assets/icons/nav-bar/settings.svg\" alt=\"Logo\" />\r\n        </a>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav>\r\n"
        },
        {
            "name": "StatusIndicatorComponent",
            "id": "component-StatusIndicatorComponent-af4eceaa1e97d53fbd966dfc02787a36881dee9ec5907889f4c2ea5ab8c4899639f5749763984325d15fdbed8c612f0324d1f979d72162196a04cbfa51aaf379",
            "file": "projects/pattern-lib/src/lib/status-indicator/status-indicator.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cb-status-indicator",
            "styleUrls": [
                "./status-indicator.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./status-indicator.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "type",
                    "defaultValue": "'pending'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'cb-status-indicator',\r\n  templateUrl: './status-indicator.component.html',\r\n  styleUrls: ['./status-indicator.component.scss'],\r\n})\r\nexport class StatusIndicatorComponent {\r\n  constructor() {}\r\n\r\n  @Input('type') type: string = 'pending';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./status-indicator.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "templateData": "<span class=\"status {{type}}\"></span>"
        },
        {
            "name": "StripComponent",
            "id": "component-StripComponent-3068262c6deade63293cdc8c4b1049cf5f9ad519965e3cac3fa389f45ee082dc22d22ae543e85d463c8df940b8c6989e52e941909d0a6f395d4b04eba4f17c15",
            "file": "projects/pattern-lib/src/lib/strip/strip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cb-strip",
            "styleUrls": [
                "./strip.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./strip.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "className",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'cb-strip',\r\n  templateUrl: './strip.component.html',\r\n  styleUrls: ['./strip.component.scss']\r\n})\r\nexport class StripComponent {\r\n  @Input('className') className: string = '';\r\n  constructor() { }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./strip.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "templateData": "<div class=\"strip {{ className }}\"></div>\r\n"
        },
        {
            "name": "TableComponent",
            "id": "component-TableComponent-58b8800e8d3bd5070258c66d5b72574ab3128b1d009a201db7ea03a4a9838d642a05f3bf38b1987ed7d0cacf914a3b3a6ac1da14226dc31648c72b278d1b9285",
            "file": "projects/pattern-lib/src/lib/table/table.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cb-table",
            "styleUrls": [
                "./table.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./table.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "actionDropdownItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "actions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "TableAction[]",
                    "decorators": []
                },
                {
                    "name": "columns",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "TableColumn[]",
                    "decorators": []
                },
                {
                    "name": "customSortable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isLoading",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "rows",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "any[]",
                    "decorators": []
                },
                {
                    "name": "sort",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Sort",
                    "decorators": []
                },
                {
                    "name": "sortable",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "tableClass",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tableId",
                    "defaultValue": "'cb-table'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "actionClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "EventEmitter"
                },
                {
                    "name": "currentValueChange",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter"
                },
                {
                    "name": "customSort",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "EventEmitter"
                },
                {
                    "name": "rowClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "clickedRow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "dropdownOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectedRow",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "actionClicked",
                    "args": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "closeDropdown",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onRowItemClick1",
                    "args": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onSortColumn",
                    "args": [
                        {
                            "name": "column",
                            "type": "TableColumn",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "column",
                            "type": "TableColumn",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "toggleDropdown",
                    "args": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output, OnInit, ElementRef } from '@angular/core';\r\nimport { Sort } from '../../models/sort';\r\nimport { TableAction } from '../../models/table-action';\r\nimport { TableColumn } from '../../models/table-column';\r\n\r\n@Component({\r\n  selector: 'cb-table',\r\n  templateUrl: './table.component.html',\r\n  styleUrls: ['./table.component.scss'],\r\n})\r\nexport class TableComponent implements OnInit {\r\n  @Input('sort') sort: Sort; \r\n  selectedRow: any;\r\n  @Input('isLoading') isLoading: boolean = true;\r\n  @Input('customSortable') customSortable: boolean = false;\r\n  @Input('sortable') sortable: boolean = true;\r\n  @Input('columns') columns: TableColumn[];\r\n  @Input('rows') rows: any[];\r\n  @Input('actionDropdownItems') actionDropdownItems: any[];\r\n  @Input('tableClass') tableClass: string = '';\r\n  @Input('tableId') tableId: string = 'cb-table';\r\n  @Input('actions') actions: TableAction[];\r\n  @Output('customSort') customSort = new EventEmitter();\r\n  @Output('rowClick') rowClick = new EventEmitter();\r\n  public dropdownOpen: boolean = false;\r\n  @Output() currentValueChange = new EventEmitter();\r\n  @Output('actionClick') actionClick = new EventEmitter();\r\n  public clickedRow: number\r\n  public get dropdownElement(): Element { return this.elem.nativeElement.querySelector('.dropdown-list') }\r\n\r\n  constructor(private elem: ElementRef) { }\r\n\r\n  ngOnInit(): void {\r\n    // if (this.columns != undefined && this.sortable) {\r\n    //   let first_sortable_column = this.columns.filter((column: TableColumn) => {\r\n    //     return column.sortable;\r\n    //   });\r\n    //   this.sort = {\r\n    //     column: first_sortable_column[0].key,\r\n    //     direction: 1,\r\n    //   };\r\n    // }\r\n  }\r\n\r\n  onRowItemClick1(data: any) {\r\n    this.selectedRow = data;\r\n    this.rowClick.emit(data);\r\n  }\r\n\r\n  actionClicked(data: any) {\r\n    this.actionClick.emit(data);\r\n  }\r\n\r\n  closeDropdown() {\r\n    this.dropdownElement.setAttribute('aria-expanded', \"false\");\r\n    this.dropdownOpen = false;\r\n  }\r\n\r\n  select(value: any) {\r\n    this.closeDropdown();\r\n    this.currentValueChange.emit(value);\r\n  }\r\n\r\n\r\n\r\n  toggleDropdown(id: any) {\r\n    this.clickedRow = id;\r\n    this.dropdownOpen = !this.dropdownOpen;\r\n    this.dropdownElement.setAttribute('aria-expanded', this.dropdownOpen ? \"true\" : \"false\");\r\n  }\r\n\r\n  onSortColumn(column: TableColumn): void {\r\n    if (this.sortable && column.sortable && !this.customSortable) {\r\n      if (this.sort.direction == 1) {\r\n        this.sort.direction = -1;\r\n      } else {\r\n        this.sort.direction = 1;\r\n      }\r\n      if (this.rows != undefined) {\r\n        this.rows.sort((a: any, b: any) => {\r\n          a = a[column.key].value.toString().toLowerCase();\r\n          b = b[column.key].value.toString().toLowerCase();\r\n          return a.localeCompare(b) * this.sort.direction;\r\n        });\r\n      }\r\n      this.sort.column = column.key;\r\n    } else if (this.customSortable) {\r\n      if (this.sort.direction == 1) {\r\n        this.sort.direction = -1;\r\n      } else {\r\n        this.sort.direction = 1;\r\n      }\r\n      this.sort.column = column.key;\r\n      this.customSort.emit(this.sort);\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./table.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elem",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "elem",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "dropdownElement": {
                    "name": "dropdownElement",
                    "getSignature": {
                        "name": "dropdownElement",
                        "type": "",
                        "returnType": "Element",
                        "line": 29
                    }
                }
            },
            "templateData": "<table class=\"table {{ tableClass }}\" id=\"{{ tableId }}\">\r\n  <thead>\r\n    <tr>\r\n      <th colspan=\"14\" class=\"colspaned\">\r\n        <table class=\"nested-table\">\r\n          <colgroup>\r\n            <col\r\n              class=\"{{ column.className }}\"\r\n              *ngFor=\"let column of columns\"\r\n            />\r\n          </colgroup>\r\n          <tr>\r\n            <th\r\n              *ngFor=\"let column of columns\"\r\n              (click)=\"onSortColumn(column)\"\r\n              class=\"{{ column.className }}\"\r\n              [ngClass]=\"{\r\n                sort: column.sortable && sortable\r\n              }\"\r\n            >\r\n              <ng-container *ngIf=\"column.type != 'action'\">\r\n                {{ column.label }}\r\n                <img\r\n                  *ngIf=\"\r\n                    sort.column == column.key &&\r\n                    sort.direction == 1 &&\r\n                    column.sortable &&\r\n                    sortable\r\n                  \"\r\n                  src=\"./assets/icons/arrowdown.svg\"\r\n                  alt=\"asc\"\r\n                />\r\n                <img\r\n                  *ngIf=\"\r\n                    sort.column == column.key &&\r\n                    sort.direction == -1 &&\r\n                    column.sortable &&\r\n                    sortable\r\n                  \"\r\n                  src=\"./assets/icons/arrowup.svg\"\r\n                  alt=\"desc\"\r\n                />\r\n              </ng-container>\r\n              <ng-container *ngIf=\"column.type == 'action'\">\r\n                <button\r\n                  class=\"settings-btn\"\r\n                  *ngIf=\"column.label === '' && column.showGear\"\r\n                >\r\n                  <img src=\"./assets/icons/nav-bar/settings.svg\" />\r\n                </button>\r\n                <ng-container *ngIf=\"column.label !== ''\">{{\r\n                  column.label\r\n                }}</ng-container>\r\n              </ng-container>\r\n            </th>\r\n          </tr>\r\n        </table>\r\n      </th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr class=\"no-data-row\" *ngIf=\"rows.length === 0 && !isLoading\">\r\n      <td colspan=\"13\">\r\n        <span class=\"text\">No records available!</span>\r\n      </td>\r\n    </tr>\r\n    <ng-container *ngIf=\"rows.length > 0\">\r\n      <tr\r\n        class=\"expandable\"\r\n        *ngFor=\"let data of rows; let id = index\"\r\n        (click)=\"onRowItemClick1(data)\"\r\n      >\r\n        <td colspan=\"14\" class=\"colspaned\">\r\n          <table class=\"nested-table\">\r\n            <colgroup>\r\n              <col\r\n                class=\"{{ column.className }}\"\r\n                *ngFor=\"let column of columns\"\r\n              />\r\n            </colgroup>\r\n            <tr>\r\n              <td\r\n                [attr.data-label]=\"column.label\"\r\n                *ngFor=\"let column of columns\"\r\n                class=\"{{ column.className }}\"\r\n                [ngClass]=\"{\r\n                  'icon-td':\r\n                    column.type === 'img-text' || column.type === 'avatar',\r\n                  actions: column.type === 'action'\r\n                }\"\r\n              >\r\n                <ng-container *ngIf=\"column.type == 'linked'\">\r\n                  <a\r\n                    *ngIf=\"data[column.key].img\"\r\n                    (click)=\"actionClicked({data, action: 'linked-click'});$event.stopPropagation()\"\r\n                    class=\"link-icon\"\r\n                    ><img src=\"{{ data[column.key].img }}\" alt=\"Link\"\r\n                  /></a>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"column.type == 'normal'\">\r\n                  {{ data[column.key].value }}\r\n                </ng-container>\r\n                <ng-container *ngIf=\"column.type == 'badge-with-date'\">\r\n                  {{ data[column.key].value }}\r\n                  <div>\r\n                    <small class=\"text-small grey-text\">{{\r\n                      data[column.key].badgeLabel\r\n                    }}</small>\r\n                  </div>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"column.type == 'currency'\">\r\n                  {{ data[column.key].value | currency: column.currencyType }}\r\n                </ng-container>\r\n                <ng-container *ngIf=\"column.type == 'status'\">\r\n                  <span class=\"status {{ data[column.key].value }}\"></span>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"column.type == 'img-progress'\">\r\n                  <div>\r\n                    <img\r\n                      *ngIf=\"data[column.key].img\"\r\n                      [src]=\"data[column.key].img\"\r\n                      alt=\"Flag\"\r\n                    />\r\n                    {{ data[column.key].label }}\r\n                  </div>\r\n                  <div class=\"progress-bar-lined\">\r\n                    <div\r\n                      class=\"progress-indication {{ data[column.key].status }}\"\r\n                      [ngStyle]=\"{ width: data[column.key].value }\"\r\n                    ></div>\r\n                  </div>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"column.type == 'text-medium'\">\r\n                  <span class=\"text-medium\">{{ data[column.key].value }}</span>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"column.type == 'img-text'\">\r\n                  <div>\r\n                    <img\r\n                      src=\"{{ data[column.key].img }}\"\r\n                      alt=\"{{ column.label }}\"\r\n                    />\r\n                    {{ data[column.key].value }}\r\n                  </div>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"column.type == 'avatar'\">\r\n                  <div class=\"avatar {{ data[column.key].avatar }}\">\r\n                    <span>{{ data[column.key].value }}</span>\r\n                  </div>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"column.type == 'badge'\">\r\n                  <label class=\"badge {{ data[column.key].value }}\">{{\r\n                    data[column.key].label\r\n                  }}</label>\r\n                  <img\r\n                    (click)=\"actionClicked({data, action: 'badge-img-click'});$event.stopPropagation()\"\r\n                    *ngIf=\"data[column.key].img\"\r\n                    class=\"mt2\"\r\n                    src=\"{{ data[column.key].img }}\"\r\n                    alt=\"{{ column.label }}\"\r\n                  />\r\n                </ng-container>\r\n                <ng-container *ngIf=\"column.type == 'badge-label'\">\r\n                  <span class=\"badge mr2 {{ data[column.key].status }}\"\r\n                    >&nbsp;{{ data[column.key].badgeLabel }}</span\r\n                  >{{ data[column.key].value }}\r\n                </ng-container>\r\n                <div class=\"list-action\" *ngIf=\"column.type == 'action'\">\r\n                  <ng-container *ngFor=\"let action of actions; let i = index\">\r\n                    <button\r\n                      *ngIf=\"\r\n                        action.isButton && data[column.key][i] && action.img\r\n                      \"\r\n                      (click)=\"actionClicked({data, action: action.value});$event.stopPropagation()\"\r\n                      class=\"{{ action.className }}\"\r\n                    >\r\n                      <img [src]=\"action.img\" />\r\n                    </button>\r\n                    <div\r\n                      id=\"{{ id }}\"\r\n                      class=\"customdropdown\"\r\n                      *ngIf=\"action.isDropdown && data['actionDropdownItems']\"\r\n                    >\r\n                      <a\r\n                        aria-haspopup=\"listbox\"\r\n                        aria-labelledby=\"dropdown-label\"\r\n                        (click)=\"toggleDropdown(id); $event.stopPropagation()\"\r\n                        (clickOutside)=\"dropdownOpen = false\"\r\n                      >\r\n                        <img [src]=\"action.img\" />\r\n                      </a>\r\n                      <ul\r\n                        class=\"dropdown-list\"\r\n                        role=\"listbox\"\r\n                        aria-expanded=\"false\"\r\n                        [ngClass]=\"{\r\n                          'dropdown-open': dropdownOpen && id == clickedRow\r\n                        }\"\r\n                      >\r\n                        <li\r\n                          *ngFor=\"let o of data['actionDropdownItems']\"\r\n                          tabindex=\"0\"\r\n                          (click)=\"actionClicked({data, action: o.value});$event.stopPropagation()\"\r\n                          role=\"option\"\r\n                          [innerHTML]=\"o.key\"\r\n                        ></li>\r\n                      </ul>\r\n                    </div>\r\n                    <button\r\n                      *ngIf=\"\r\n                        !action.img && data[column.key][i] && action.isButton\r\n                      \"\r\n                      (click)=\"actionClicked({data, action: action.value});$event.stopPropagation()\"\r\n                      class=\"{{ action.className }}\"\r\n                    >\r\n                      {{ action.label }}\r\n                    </button>\r\n                  </ng-container>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr class=\"expanded\" *ngFor=\"let order of data.linkedOrders\">\r\n              <td\r\n                [attr.data-label]=\"column.label\"\r\n                *ngFor=\"let column of columns\"\r\n                class=\"{{ column.className }}\"\r\n                [ngClass]=\"{\r\n                  'icon-td':\r\n                    column.type === 'img-text' || column.type === 'avatar',\r\n                  actions: column.type === 'action',\r\n                  linked: column.type === 'linked'\r\n                }\"\r\n              >\r\n                <ng-container *ngIf=\"column.type == 'linked'\">\r\n                  <span class=\"h-line\"></span>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"column.type == 'normal'\">\r\n                  {{ order[column.key].value }}\r\n                </ng-container>\r\n                <ng-container *ngIf=\"column.type == 'badge-with-date'\">\r\n                  {{ order[column.key].value }}\r\n                  <div>\r\n                    <small class=\"text-small grey-text\">{{\r\n                      order[column.key].badgeLabel\r\n                    }}</small>\r\n                  </div>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"column.type == 'currency'\">\r\n                  {{ order[column.key].value | currency: column.currencyType }}\r\n                </ng-container>\r\n                <ng-container *ngIf=\"column.type == 'status'\">\r\n                  <!-- <span class=\"status {{ order[column.key].value }}\"></span> -->\r\n                </ng-container>\r\n                <ng-container *ngIf=\"column.type == 'img-progress'\">\r\n                  <div>\r\n                    <img\r\n                      *ngIf=\"order[column.key].img\"\r\n                      [src]=\"order[column.key].img\"\r\n                      alt=\"Flag\"\r\n                    />\r\n                    {{ order[column.key].label }}\r\n                  </div>\r\n                  <div class=\"progress-bar-lined\">\r\n                    <div\r\n                      class=\"progress-indication {{ order[column.key].status }}\"\r\n                      [ngStyle]=\"{ width: order[column.key].value }\"\r\n                    ></div>\r\n                  </div>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"column.type == 'text-medium'\">\r\n                  <span class=\"text-medium\">{{ order[column.key].value }}</span>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"column.type == 'img-text'\">\r\n                  <div>\r\n                    <img\r\n                      src=\"{{ order[column.key].img }}\"\r\n                      alt=\"{{ column.label }}\"\r\n                    />\r\n                    {{ order[column.key].value }}\r\n                  </div>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"column.type == 'avatar'\">\r\n                  <div class=\"avatar {{ order[column.key].avatar }}\">\r\n                    <span>{{ order[column.key].value }}</span>\r\n                  </div>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"column.type == 'badge'\">\r\n                  <label class=\"badge {{ order[column.key].value }}\">{{\r\n                    order[column.key].label\r\n                  }}</label>\r\n                  <img\r\n                    (click)=\"actionClicked({order, action: 'badge-img-click'});$event.stopPropagation()\"\r\n                    *ngIf=\"order[column.key].img\"\r\n                    class=\"mt2\"\r\n                    src=\"{{ order[column.key].img }}\"\r\n                    alt=\"{{ column.label }}\"\r\n                  />\r\n                </ng-container>\r\n                <ng-container *ngIf=\"column.type == 'badge-label'\">\r\n                  <span class=\"badge mr2 {{ order[column.key].status }}\"\r\n                    >&nbsp;{{ order[column.key].badgeLabel }}</span\r\n                  >{{ order[column.key].value }}\r\n                </ng-container>\r\n                <div class=\"list-action\" *ngIf=\"column.type == 'action'\">\r\n                  <ng-container *ngFor=\"let action of actions; let i = index\">\r\n                    <button\r\n                      *ngIf=\"\r\n                        action.isButton && order[column.key][i] && action.img\r\n                      \"\r\n                      (click)=\"actionClicked({order, action: action.value+'-linked'});$event.stopPropagation()\"\r\n                      class=\"{{ action.className }}\"\r\n                    >\r\n                      <img [src]=\"action.img\" />\r\n                    </button>\r\n                    <div\r\n                      id=\"{{ id }}\"\r\n                      class=\"customdropdown\"\r\n                      *ngIf=\"action.isDropdown && order['actionDropdownItems']\"\r\n                    >\r\n                      <a\r\n                        aria-haspopup=\"listbox\"\r\n                        aria-labelledby=\"dropdown-label\"\r\n                        (click)=\"toggleDropdown(id); $event.stopPropagation()\"\r\n                        (clickOutside)=\"dropdownOpen = false\"\r\n                      >\r\n                        <img [src]=\"action.img\" />\r\n                      </a>\r\n                      <ul\r\n                        class=\"dropdown-list\"\r\n                        role=\"listbox\"\r\n                        aria-expanded=\"false\"\r\n                        [ngClass]=\"{\r\n                          'dropdown-open': dropdownOpen && id == clickedRow\r\n                        }\"\r\n                      >\r\n                        <li\r\n                          *ngFor=\"let o of order['actionDropdownItems']\"\r\n                          tabindex=\"0\"\r\n                          (click)=\"actionClicked({order, action: o.value+'-linked'});$event.stopPropagation()\"\r\n                          role=\"option\"\r\n                          [innerHTML]=\"o.key\"\r\n                        ></li>\r\n                      </ul>\r\n                    </div>\r\n                    <button\r\n                      *ngIf=\"\r\n                        !action.img && order[column.key][i] && action.isButton\r\n                      \"\r\n                      (click)=\"actionClicked({order, action: action.value+'-linked'});$event.stopPropagation()\"\r\n                      class=\"{{ action.className }}\"\r\n                    >\r\n                      {{ action.label }}\r\n                    </button>\r\n                  </ng-container>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </td>\r\n      </tr>\r\n    </ng-container>\r\n  </tbody>\r\n</table>\r\n"
        }
    ],
    "modules": [
        {
            "name": "PatternLibModule",
            "id": "module-PatternLibModule-303c8abfa11add22ab011ec0f3571c49eb88f5daf9488c6f8fce50767d791745b1c48ef5c7da4b86b497efd6d4ec673750d935b3708ab627c399b4bb46a818cf",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/pattern-lib/src/lib/pattern-lib.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { PatternLibComponent } from './pattern-lib.component';\r\nimport { DatatableComponent } from './datatable/datatable.component';\r\nimport { ButtonComponent } from './button/button.component';\r\nimport { AvatarComponent } from './avatar/avatar.component';\r\nimport { BadgeComponent } from './badge/badge.component';\r\nimport { DropdownComponent } from './dropdown/dropdown.component';\r\nimport { FormComponent } from './form/form.component';\r\nimport { SearchInputComponent } from './search-input/search-input.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { StatusIndicatorComponent } from './status-indicator/status-indicator.component';\r\nimport { StripComponent } from './strip/strip.component';\r\nimport { TableComponent } from './table/table.component';\r\nimport { DropdownExpandedComponent } from './dropdown-expanded/dropdown-expanded.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { DealsCardComponent } from './deals-card/deals-card.component';\r\nimport { ClickOutsideDirective } from './directives/click-outside.directive';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ProgressBarComponent } from './progress-bar/progress-bar.component';\r\nimport { DropdownStatusComponent } from './dropdown-status/dropdown-status.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ClickOutsideDirective,\r\n    PatternLibComponent,\r\n    DatatableComponent,\r\n    ButtonComponent,\r\n    AvatarComponent,\r\n    BadgeComponent,\r\n    DropdownComponent,\r\n    FormComponent,\r\n    SearchInputComponent,\r\n    SidebarComponent,\r\n    StatusIndicatorComponent,\r\n    StripComponent,\r\n    TableComponent,\r\n    DropdownExpandedComponent,\r\n    DealsCardComponent,\r\n    ProgressBarComponent,\r\n    DropdownStatusComponent,\r\n  ],\r\n  imports: [CommonModule, BrowserModule, FormsModule, RouterModule],\r\n  exports: [\r\n    ClickOutsideDirective,\r\n    PatternLibComponent,\r\n    DatatableComponent,\r\n    ButtonComponent,\r\n    AvatarComponent,\r\n    BadgeComponent,\r\n    DropdownComponent,\r\n    FormComponent,\r\n    SearchInputComponent,\r\n    SidebarComponent,\r\n    StatusIndicatorComponent,\r\n    StripComponent,\r\n    TableComponent,\r\n    DropdownExpandedComponent,\r\n    DealsCardComponent,\r\n    ProgressBarComponent,\r\n    DropdownStatusComponent,\r\n  ],\r\n})\r\nexport class PatternLibModule { }\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AvatarComponent"
                        },
                        {
                            "name": "BadgeComponent"
                        },
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "ClickOutsideDirective"
                        },
                        {
                            "name": "DatatableComponent"
                        },
                        {
                            "name": "DealsCardComponent"
                        },
                        {
                            "name": "DropdownComponent"
                        },
                        {
                            "name": "DropdownExpandedComponent"
                        },
                        {
                            "name": "DropdownStatusComponent"
                        },
                        {
                            "name": "FormComponent"
                        },
                        {
                            "name": "PatternLibComponent"
                        },
                        {
                            "name": "ProgressBarComponent"
                        },
                        {
                            "name": "SearchInputComponent"
                        },
                        {
                            "name": "SidebarComponent"
                        },
                        {
                            "name": "StatusIndicatorComponent"
                        },
                        {
                            "name": "StripComponent"
                        },
                        {
                            "name": "TableComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AvatarComponent"
                        },
                        {
                            "name": "BadgeComponent"
                        },
                        {
                            "name": "ClickOutsideDirective"
                        },
                        {
                            "name": "DatatableComponent"
                        },
                        {
                            "name": "DealsCardComponent"
                        },
                        {
                            "name": "DropdownComponent"
                        },
                        {
                            "name": "DropdownExpandedComponent"
                        },
                        {
                            "name": "DropdownStatusComponent"
                        },
                        {
                            "name": "FormComponent"
                        },
                        {
                            "name": "PatternLibComponent"
                        },
                        {
                            "name": "ProgressBarComponent"
                        },
                        {
                            "name": "SearchInputComponent"
                        },
                        {
                            "name": "SidebarComponent"
                        },
                        {
                            "name": "StatusIndicatorComponent"
                        },
                        {
                            "name": "StripComponent"
                        },
                        {
                            "name": "TableComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Acknowledged",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Status Dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Blue",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Checkbox",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Forms.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Closed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Closed",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Status.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/pattern-lib/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "CustomNormal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CustomRounded",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DealsImageFile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Sidebar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require('../projects/pattern-lib/static/assets/icons/nav-bar/deals.svg')"
            },
            {
                "name": "DisabledButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/CBButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DisabledDropdown",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "FolderImg",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require('../projects/pattern-lib/static/assets/icons/categories/folder.svg')"
            },
            {
                "name": "Gold",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "HomeImageFile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Sidebar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require('../projects/pattern-lib/static/assets/icons/nav-bar/home.svg')"
            },
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/CBButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ImageFile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/CBButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require('../projects/pattern-lib/static/assets/icons/search-white.svg')"
            },
            {
                "name": "InProgress",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Status Dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "InsightsImageFile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Sidebar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require('../projects/pattern-lib/static/assets/icons/nav-bar/insights.svg')"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "linkedImg",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require('../projects/pattern-lib/static/assets/icons/link.svg')"
            },
            {
                "name": "LocationsImageFile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Sidebar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require('../projects/pattern-lib/static/assets/icons/nav-bar/locations.svg')"
            },
            {
                "name": "Medium",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/CBButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "MoreImg",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require('../projects/pattern-lib/static/assets/icons/actions/more.svg')"
            },
            {
                "name": "MultiLocation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/DealsCard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Normal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Normal",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/SearchInput.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Orange",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Order",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Order",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Status.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Pending",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Pending",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Status.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/CBButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "progressImg",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require('../projects/pattern-lib/static/assets/icons/flag.svg')"
            },
            {
                "name": "Purple",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Radio",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Forms.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Received",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Status Dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Rejected",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Rejected",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Status Dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Rejected",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Status.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/pattern-lib/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Rounded",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Rounded",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/SearchInput.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/CBButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SendImg",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require('../projects/pattern-lib/static/assets/icons/actions/send.svg')"
            },
            {
                "name": "Sent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Sent",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Status.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Sidebar",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Sidebar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "SingleLocation",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/DealsCard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/CBButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/SearchInput.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "stagImg",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require('../projects/pattern-lib/static/assets/icons/red-warning.svg')"
            },
            {
                "name": "Strip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Strip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Table",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Avatar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<AvatarComponent>",
                "defaultValue": "(args: AvatarComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Badge.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<BadgeComponent>",
                "defaultValue": "(args: BadgeComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/CBButton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Datatable.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<DatatableComponent>",
                "defaultValue": "(args: DatatableComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/DealsCard.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<DealsCardComponent>",
                "defaultValue": "(args: DealsCardComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<DropdownComponent>",
                "defaultValue": "(args: DropdownComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Forms.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<FormComponent>",
                "defaultValue": "(args: FormComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/SearchInput.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SearchInputComponent>",
                "defaultValue": "(args: SearchInputComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Sidebar.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<SidebarComponent>",
                "defaultValue": "(args: SidebarComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Status Dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<DropdownStatusComponent>",
                "defaultValue": "(\r\n  args: DropdownStatusComponent\r\n) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Status.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<StatusIndicatorComponent>",
                "defaultValue": "(\r\n  args: StatusIndicatorComponent\r\n) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Strip.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<StripComponent>",
                "defaultValue": "(args: StripComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Table.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TableComponent>",
                "defaultValue": "(args: TableComponent) => ({\r\n  props: args,\r\n})"
            },
            {
                "name": "WithData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Datatable.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithoutData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Datatable.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithSearch",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Datatable.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [],
        "groupedVariables": {
            "stories/Status Dropdown.stories.ts": [
                {
                    "name": "Acknowledged",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Status Dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "InProgress",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Status Dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Received",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Status Dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Rejected",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Status Dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Status Dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<DropdownStatusComponent>",
                    "defaultValue": "(\r\n  args: DropdownStatusComponent\r\n) => ({\r\n  props: args,\r\n})"
                }
            ],
            "stories/Avatar.stories.ts": [
                {
                    "name": "Blue",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Gold",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Orange",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Purple",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Avatar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<AvatarComponent>",
                    "defaultValue": "(args: AvatarComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "stories/Forms.stories.ts": [
                {
                    "name": "Checkbox",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Forms.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Radio",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Forms.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Forms.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<FormComponent>",
                    "defaultValue": "(args: FormComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "stories/Badge.stories.ts": [
                {
                    "name": "Closed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Order",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Pending",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Rejected",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Sent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Badge.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<BadgeComponent>",
                    "defaultValue": "(args: BadgeComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "stories/Status.stories.ts": [
                {
                    "name": "Closed",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Status.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Order",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Status.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Pending",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Status.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Rejected",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Status.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Sent",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Status.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Status.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<StatusIndicatorComponent>",
                    "defaultValue": "(\r\n  args: StatusIndicatorComponent\r\n) => ({\r\n  props: args,\r\n})"
                }
            ],
            "projects/pattern-lib/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/pattern-lib/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/pattern-lib/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "stories/Dropdown.stories.ts": [
                {
                    "name": "CustomNormal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "CustomRounded",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DisabledDropdown",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Normal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Rounded",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<DropdownComponent>",
                    "defaultValue": "(args: DropdownComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "stories/Sidebar.stories.ts": [
                {
                    "name": "DealsImageFile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Sidebar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require('../projects/pattern-lib/static/assets/icons/nav-bar/deals.svg')"
                },
                {
                    "name": "HomeImageFile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Sidebar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require('../projects/pattern-lib/static/assets/icons/nav-bar/home.svg')"
                },
                {
                    "name": "InsightsImageFile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Sidebar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require('../projects/pattern-lib/static/assets/icons/nav-bar/insights.svg')"
                },
                {
                    "name": "LocationsImageFile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Sidebar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require('../projects/pattern-lib/static/assets/icons/nav-bar/locations.svg')"
                },
                {
                    "name": "Sidebar",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Sidebar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Sidebar.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SidebarComponent>",
                    "defaultValue": "(args: SidebarComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "stories/CBButton.stories.ts": [
                {
                    "name": "DisabledButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/CBButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/CBButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ImageFile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/CBButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require('../projects/pattern-lib/static/assets/icons/search-white.svg')"
                },
                {
                    "name": "Medium",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/CBButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/CBButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/CBButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/CBButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/CBButton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "stories/Table.stories.ts": [
                {
                    "name": "FolderImg",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require('../projects/pattern-lib/static/assets/icons/categories/folder.svg')"
                },
                {
                    "name": "linkedImg",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require('../projects/pattern-lib/static/assets/icons/link.svg')"
                },
                {
                    "name": "MoreImg",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require('../projects/pattern-lib/static/assets/icons/actions/more.svg')"
                },
                {
                    "name": "progressImg",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require('../projects/pattern-lib/static/assets/icons/flag.svg')"
                },
                {
                    "name": "SendImg",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require('../projects/pattern-lib/static/assets/icons/actions/send.svg')"
                },
                {
                    "name": "stagImg",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require('../projects/pattern-lib/static/assets/icons/red-warning.svg')"
                },
                {
                    "name": "Table",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Table.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TableComponent>",
                    "defaultValue": "(args: TableComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\r\n  props: args,\r\n})"
                }
            ],
            "stories/DealsCard.stories.ts": [
                {
                    "name": "MultiLocation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/DealsCard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "SingleLocation",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/DealsCard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/DealsCard.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<DealsCardComponent>",
                    "defaultValue": "(args: DealsCardComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "stories/SearchInput.stories.ts": [
                {
                    "name": "Normal",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/SearchInput.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Rounded",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/SearchInput.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/SearchInput.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/SearchInput.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<SearchInputComponent>",
                    "defaultValue": "(args: SearchInputComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "stories/Strip.stories.ts": [
                {
                    "name": "Strip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Strip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Strip.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<StripComponent>",
                    "defaultValue": "(args: StripComponent) => ({\r\n  props: args,\r\n})"
                }
            ],
            "stories/Datatable.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Datatable.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<DatatableComponent>",
                    "defaultValue": "(args: DatatableComponent) => ({\r\n  props: args,\r\n})"
                },
                {
                    "name": "WithData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Datatable.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WithoutData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Datatable.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WithSearch",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Datatable.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {}
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/pattern-lib/src/lib/avatar/avatar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AvatarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/pattern-lib/src/lib/badge/badge.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "BadgeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/pattern-lib/src/lib/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/pattern-lib/src/lib/datatable/datatable.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatatableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/pattern-lib/src/lib/deals-card/deals-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DealsCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/pattern-lib/src/lib/directives/click-outside.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ClickOutsideDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/pattern-lib/src/lib/dropdown-expanded/dropdown-expanded.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DropdownExpandedComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/pattern-lib/src/lib/dropdown-status/dropdown-status.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DropdownStatusComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/pattern-lib/src/lib/dropdown/dropdown.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DropdownComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "projects/pattern-lib/src/lib/form/form.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FormComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/pattern-lib/src/lib/pattern-lib.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PatternLibComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/pattern-lib/src/lib/pattern-lib.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "PatternLibService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/pattern-lib/src/lib/progress-bar/progress-bar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProgressBarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/pattern-lib/src/lib/search-input/search-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SearchInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/pattern-lib/src/lib/sidebar/sidebar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SidebarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/pattern-lib/src/lib/status-indicator/status-indicator.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StatusIndicatorComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/pattern-lib/src/lib/strip/strip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StripComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/pattern-lib/src/lib/table/table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/26",
                "status": "low"
            },
            {
                "filePath": "projects/pattern-lib/src/models/deals-card.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DealsCard",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/pattern-lib/src/models/form.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Form",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/pattern-lib/src/models/key-value.ts",
                "type": "class",
                "linktype": "classe",
                "name": "KeyValue",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/pattern-lib/src/models/sidebar.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Sidebar",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/pattern-lib/src/models/sort.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Sort",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/pattern-lib/src/models/table-action.ts",
                "type": "class",
                "linktype": "classe",
                "name": "TableAction",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/pattern-lib/src/models/table-column.ts",
                "type": "class",
                "linktype": "classe",
                "name": "TableColumn",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/pattern-lib/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/pattern-lib/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Blue",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Gold",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Orange",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Purple",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Avatar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Closed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Order",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Pending",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Rejected",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Badge.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/CBButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/CBButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Icon",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/CBButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ImageFile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/CBButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Medium",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/CBButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/CBButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/CBButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/CBButton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Datatable.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Datatable.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Datatable.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithoutData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Datatable.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithSearch",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/DealsCard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MultiLocation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/DealsCard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SingleLocation",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/DealsCard.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomNormal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomRounded",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledDropdown",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Normal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Rounded",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Forms.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Checkbox",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Forms.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Radio",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Forms.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/SearchInput.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Normal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/SearchInput.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Rounded",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/SearchInput.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/SearchInput.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Sidebar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DealsImageFile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Sidebar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HomeImageFile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Sidebar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InsightsImageFile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Sidebar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LocationsImageFile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Sidebar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sidebar",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Sidebar.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Status Dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Acknowledged",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Status Dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "InProgress",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Status Dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Received",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Status Dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Rejected",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Status Dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Status.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Closed",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Status.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Order",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Status.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Pending",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Status.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Rejected",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Status.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Sent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Status.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Strip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Strip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Strip.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FolderImg",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "linkedImg",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MoreImg",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "progressImg",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SendImg",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "stagImg",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Table",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Table.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            }
        ]
    }
}